<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute name="errorCode" type="xsd:string" msdata:Ordinal="5" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonTitle" errorCode="001" xml:space="preserve">
    <value>AtScale кубове</value>
  </data>
  <data name="ButtonHelp" errorCode="002" xml:space="preserve">
    <value>Импортирайте/извършете DirectQuery за данни на куб от AtScale.</value>
  </data>
  <data name="Label" errorCode="003" xml:space="preserve">
    <value>AtScale кубове</value>
  </data>
  <data name="AtScaleCubes_Description" errorCode="004" xml:space="preserve">
    <value>Import/DirectQuery данни на куб от AtScale.</value>
  </data>
  <data name="AtScaleCubes_LongDescription" errorCode="005" xml:space="preserve">
    <value>
Връща данни за куб от AtScale на сървъра &lt;code&gt;server&lt;/code&gt;. Може да се зададе незадължителен параметър на записа, &lt;code&gt;опции&lt;/code&gt;, за да се контролират следните опции:
&lt;ul&gt;
        &lt;li&gt;&lt;code&gt;TypedMeasureColumns&lt;/code&gt;: Логическа стойност, показваща дали типовете, посочени в многоизмерния или табуларния модел, ще бъдат използвани за типовете на добавените колони с мярка. Когато е зададен на false, типът „number“ ще се използва за всички колони с мярка. Стойността по подразбиране за тази опция е false.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;CommandTimeout&lt;/code&gt;: Продължителност (в секунди), която контролира колко време може да се изпълнява заявката от страна на сървъра, преди да бъде отменена. Стойността по подразбиране е зависима от драйвера. &lt;/li&gt;
        &lt;li&gt;&lt;code&gt;ConnectionTimeout&lt;/code&gt;: Продължителност (в секунди), която контролира колко време да се изчака, преди да се прекрати опитът за установяване на връзка със сървъра. Стойността по подразбиране е зависима от драйвера. &lt;/li&gt;

&lt;/ul&gt;
Параметърът на записа се задава като [опция1 = стойност1, опция2 = стойност2...].</value>
  </data>
  <data name="AtScaleCubes_ExampleDescription" errorCode="006" xml:space="preserve">
    <value>Посочете данните за куба в куб на AtScale.</value>
  </data>
  <data name="FormulaTitle" errorCode="007" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="AuthenticationLabel" errorCode="008" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="ServerParameterCaption" errorCode="009" xml:space="preserve">
    <value>Сървър</value>
  </data>
  <data name="ServerParameterDescription" errorCode="010" xml:space="preserve">
    <value>Укажете URL адреса на сървъра на AtScale</value>
  </data>
  <data name="OptionsParameterCaption" errorCode="011" xml:space="preserve">
    <value>Опции</value>
  </data>
  <data name="OptionsParameterDescription" errorCode="012" xml:space="preserve">
    <value>Посочете опциите за свързване със сървъра на AtScale</value>
  </data>
  <data name="InvalidServerNameError" errorCode="013" xml:space="preserve">
    <value>Указано е невалидно име на сървър. Името на сървъра трябва да е във формат „http(s)://contoso.atscale.com:10502/xmla/...“, като номерът на порта е опционален.</value>
  </data>
  <data name="InvalidOptionsKey" errorCode="014" xml:space="preserve">
    <value>„#{0}“ не е валидна опция на AtScale. Валидни опции са: „#{1}“</value>
  </data>
  <data name="InvalidOptionsValue" errorCode="015" xml:space="preserve">
    <value>Тази функция на AtScale не поддържа опцията „#{0}“ със стойност „#{1}“</value>
  </data>
</root>