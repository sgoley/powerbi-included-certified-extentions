<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute name="errorCode" type="xsd:string" msdata:Ordinal="5" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonTitle" errorCode="001" xml:space="preserve">
    <value>Cubos AtScale</value>
  </data>
  <data name="ButtonHelp" errorCode="002" xml:space="preserve">
    <value>Importar datos de cubo de DirectQuery de AtScale.</value>
  </data>
  <data name="Label" errorCode="003" xml:space="preserve">
    <value>Cubos AtScale</value>
  </data>
  <data name="AtScaleCubes_Description" errorCode="004" xml:space="preserve">
    <value>Datos de cubo de importación ou DirectQuery de AtScale.</value>
  </data>
  <data name="AtScaleCubes_LongDescription" errorCode="005" xml:space="preserve">
    <value>
Devolve datos de cubo de AtScale no servidor &lt;code&gt;server&lt;/code&gt;. Pode especificarse un parámetro de rexistro opcional, &lt;code&gt;options&lt;/code&gt;, para controlar as seguintes opcións:
&lt;ul&gt;
        &lt;li&gt;&lt;code&gt;TypedMeasureColumns&lt;/code&gt;: un valor lóxico que indica se os tipos especificados no modelo multidimensional ou tabular se usarán para os tipos das columnas de medidas engadidas. Cando se configura como false, usarase o tipo "number" para todas as columnas de medidas. O valor predefinido para esta opción é false.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;CommandTimeout&lt;/code&gt;: unha duración (en segundos) que controla canto tempo se permite executar a consulta do lado do servidor ata que se cancele. O valor predefinido depende do controlador. &lt;/li&gt;
        &lt;li&gt;&lt;code&gt;ConnectionTimeout&lt;/code&gt;: unha duración (en segundos) que controla canto tempo esperar antes de abandonar unha tentativa para realizar unha conexión co servidor. O valor predeterminado depende do controlador. &lt;/li&gt;

&lt;/ul&gt;
O parámetro de rexistro expecifícase como [opción1 = valor1, opción2 = valor2...].</value>
  </data>
  <data name="AtScaleCubes_ExampleDescription" errorCode="006" xml:space="preserve">
    <value>Enumera os datos de cubo dun cubo AtScale.</value>
  </data>
  <data name="FormulaTitle" errorCode="007" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="AuthenticationLabel" errorCode="008" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="ServerParameterCaption" errorCode="009" xml:space="preserve">
    <value>Servidor</value>
  </data>
  <data name="ServerParameterDescription" errorCode="010" xml:space="preserve">
    <value>Especifique o URL de servidor AtScale.</value>
  </data>
  <data name="OptionsParameterCaption" errorCode="011" xml:space="preserve">
    <value>Opcións</value>
  </data>
  <data name="OptionsParameterDescription" errorCode="012" xml:space="preserve">
    <value>Especifique as opcións para conectar co servidor AtScale.</value>
  </data>
  <data name="InvalidServerNameError" errorCode="013" xml:space="preserve">
    <value>Especificouse un nome do servidor non válido. Este debe estar no formato "http(s)://contoso.atscale.com:10502/xmla/...", onde o número de porto é opcional.</value>
  </data>
  <data name="InvalidOptionsKey" errorCode="014" xml:space="preserve">
    <value>"#{0}" non é unha opción de AtScale válida. As opcións válidas son as seguintes: "#{1}"</value>
  </data>
  <data name="InvalidOptionsValue" errorCode="015" xml:space="preserve">
    <value>Esta función de AtScale non admite a opción de consulta "#{0}" co valor "#{1}".</value>
  </data>
</root>