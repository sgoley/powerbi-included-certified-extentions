<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute name="errorCode" type="xsd:string" msdata:Ordinal="5" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonTitle" errorCode="001" xml:space="preserve">
    <value>AtScale 큐브</value>
  </data>
  <data name="ButtonHelp" errorCode="002" xml:space="preserve">
    <value>AtScale에서 큐브 데이터를 가져오거나 직접 쿼리합니다.</value>
  </data>
  <data name="Label" errorCode="003" xml:space="preserve">
    <value>AtScale 큐브</value>
  </data>
  <data name="AtScaleCubes_Description" errorCode="004" xml:space="preserve">
    <value>AtScale의 가져오기/DirectQuery 큐브 데이터입니다.</value>
  </data>
  <data name="AtScaleCubes_LongDescription" errorCode="005" xml:space="preserve">
    <value>
서버 &lt;code&gt;server&lt;/code&gt;의 AtScale에서 큐브 데이터를 반환합니다. 선택적 레코드 매개 변수 &lt;code&gt;options&lt;/code&gt;를 지정하여 다음 옵션을 제어할 수도 있습니다.
&lt;ul&gt;
        &lt;li&gt;&lt;code&gt;TypedMeasureColumns&lt;/code&gt;: 다차원 또는 테이블 형식 모델에 지정된 유형을 추가된 측정값 열 유형에 사용할지 여부를 나타내는 논리적 값입니다. false로 설정할 경우 "number" 유형이 모든 측정값 열에 사용됩니다. 이 옵션의 기본값은 false입니다.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;CommandTimeout&lt;/code&gt;: 서버 쪽 쿼리를 취소 전까지 얼마나 오랫동안 실행할 수 있는지를 제어하는 기간(초)입니다. 기본값은 드라이버에 따라 다릅니다. &lt;/li&gt;
        &lt;li&gt;&lt;code&gt;ConnectionTimeout&lt;/code&gt;: 서버에 대한 연결 시도를 중단하기 전까지 얼마나 오랫동안 대기할지를 제어하는 기간(초)입니다. 기본값은 드라이버에 따라 다릅니다. &lt;/li&gt;

&lt;/ul&gt;
레코드 매개 변수는 [option1 = value1, option2 = value2...]로 지정됩니다.</value>
  </data>
  <data name="AtScaleCubes_ExampleDescription" errorCode="006" xml:space="preserve">
    <value>AtScale 큐브에서 큐브 데이터를 나열합니다.</value>
  </data>
  <data name="FormulaTitle" errorCode="007" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="AuthenticationLabel" errorCode="008" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="ServerParameterCaption" errorCode="009" xml:space="preserve">
    <value>서버</value>
  </data>
  <data name="ServerParameterDescription" errorCode="010" xml:space="preserve">
    <value>AtScale 서버 URL을 지정합니다.</value>
  </data>
  <data name="OptionsParameterCaption" errorCode="011" xml:space="preserve">
    <value>옵션</value>
  </data>
  <data name="OptionsParameterDescription" errorCode="012" xml:space="preserve">
    <value>AtScale 서버 연결 옵션을 지정합니다.</value>
  </data>
  <data name="InvalidServerNameError" errorCode="013" xml:space="preserve">
    <value>잘못된 서버 이름이 지정되었습니다. 서버 이름의 형식은 'http(s)://contoso.atscale.com:10502/xmla/...'여야 하며, 여기서 포트 번호는 선택 사항입니다.</value>
  </data>
  <data name="InvalidOptionsKey" errorCode="014" xml:space="preserve">
    <value>' #{0}'은(는) 유효한 AtScale 옵션이 아닙니다. 유효한 옵션: '#{1}'</value>
  </data>
  <data name="InvalidOptionsValue" errorCode="015" xml:space="preserve">
    <value>이 AtScale 함수는 값이 '#{1}'인 옵션 '#{0}'을(를) 지원하지 않습니다.</value>
  </data>
</root>