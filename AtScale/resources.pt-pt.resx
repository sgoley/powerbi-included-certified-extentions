<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonTitle" xml:space="preserve">
    <value>Cubos AtScale</value>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>Importar/DirectQuery os dados de cubo do AtScale.</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Cubos AtScale</value>
  </data>
  <data name="AtScaleCubes_Description" xml:space="preserve">
    <value>Importar/DirectQuery dados de cubo de um AtScale.</value>
  </data>
  <data name="AtScaleCubes_LongDescription" xml:space="preserve">
    <value>
Devolve dados de cubo do AtScale no servidor &lt;code&gt;servidor&lt;/code&gt;. Um parâmetro de registo opcional, &lt;code&gt;opções&lt;/code&gt;, podem ser especificados para controlar as seguintes opções:
&lt;ul&gt;
        &lt;li&gt;&lt;code&gt;TypedMeasureColumns&lt;/code&gt;: Um valor lógico a indicar se os tipos especificados no modelo multidimensional ou tabular irão ser usados nos tipos das colunas de medida adicionadas. Quando definido como falso, o tipo "número" será usado em todas as colunas de medida. O valor predefinido desta opção é falso.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;CommandTimeout&lt;/code&gt;: Uma duração (em segundos) que controla o tempo máximo de execução permitido da consulta do lado do servidor antes do seu cancelamento. O valor predefinido é dependente do controlador. &lt;/li&gt;
        &lt;li&gt;&lt;code&gt;ConnectionTimeout&lt;/code&gt;: Uma duração (em segundos) que controla o tempo máximo de espera antes de abandonar uma tentativa de estabelecer uma ligação ao servidor. O valor predefinido é dependente do controlador. &lt;/li&gt;

&lt;/ul&gt;
O parâmetro de registo está especificado como [option1 = value1, option2 = value2...].</value>
  </data>
  <data name="AtScaleCubes_ExampleDescription" xml:space="preserve">
    <value>Listar os dados de cubo no cubo AtScale.</value>
  </data>
  <data name="FormulaTitle" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="AuthenticationLabel" xml:space="preserve">
    <value>AtScale</value>
  </data>
  <data name="ServerParameterCaption" xml:space="preserve">
    <value>Servidor</value>
  </data>
  <data name="ServerParameterDescription" xml:space="preserve">
    <value>Especifique o URL do servidor AtScale</value>
  </data>
  <data name="OptionsParameterCaption" xml:space="preserve">
    <value>Opções</value>
  </data>
  <data name="OptionsParameterDescription" xml:space="preserve">
    <value>Especifique as opções de ligação ao servidor do AtScale</value>
  </data>
  <data name="InvalidServerNameError" xml:space="preserve">
    <value>Foi especificado um nome de servidor inválido. O nome do servidor tem de estar no formato "http(s)://contoso.atscale.com:10502/xmla/...", no qual o número da porta é opcional.</value>
  </data>
  <data name="InvalidOptionsKey" xml:space="preserve">
    <value>"#{0}" não é uma opção válida do AtScale. As opções válidas são: "#{1}"</value>
  </data>
  <data name="InvalidOptionsValue" xml:space="preserve">
    <value>Esta função do AtScale não suporta a opção "#{0}" com valor "#{1}"</value>
  </data>
</root>