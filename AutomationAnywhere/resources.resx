<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A2019SwaggerFile" xml:space="preserve">
    <value>A2019Swagger.json</value>
    <comment>A360 swagger file to load the APIs with request params</comment>
  </data>
  <data name="A2019Version" xml:space="preserve">
    <value>Automation 360</value>
    <comment>A360 version identifier</comment>
  </data>
  <data name="AuthErrorMessage" xml:space="preserve">
    <value>User with this role is not authorized to access the Bot Insight APIs</value>
    <comment>Error message display. The Users with roles other than BI Admin and BI COE admin wouldnt be able to access any other APIs</comment>
  </data>
  <data name="BotInsightAdminRole" xml:space="preserve">
    <value>AAE_Bot Insight Admin</value>
    <comment>Bot Insight Admin Role name - can access all the APIs</comment>
  </data>
  <data name="BotInsightCoeAdminRole" xml:space="preserve">
    <value>AAE_COE_Admin</value>
    <comment>Bot Insight COE Admin Role name - can access only the COE API</comment>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>Connect to Automation Anywhere</value>
    <comment>help link name</comment>
  </data>
  <data name="ButtonTitle" xml:space="preserve">
    <value>AutomationAnywhere</value>
    <comment>title name</comment>
  </data>
  <data name="DataSourceLabel" xml:space="preserve">
    <value>Automation Anywhere Login</value>
    <comment>Login page title</comment>
  </data>
  <data name="ElevenPatchSwaggerFile" xml:space="preserve">
    <value>elevenPatchSwagger.json</value>
    <comment>11.3.5.1 patch or higher version APIs</comment>
  </data>
  <data name="ElevenThreeFiveOneVersion" xml:space="preserve">
    <value>11.3.5.1 Or Higher</value>
  </data>
  <data name="ElevenxVersion" xml:space="preserve">
    <value>10.x/11.x</value>
    <comment>10x/11x version identifier</comment>
  </data>
  <data name="HostSplitterExpr" xml:space="preserve">
    <value>://</value>
    <comment>splitter expr in the host to fetch scheme and hostname/ipaddress</comment>
  </data>
  <data name="SuperAdmin" xml:space="preserve">
    <value>AAE_Admin</value>
    <comment>Super Admin Role</comment>
  </data>
  <data name="SwaggerA2019Admin" xml:space="preserve">
    <value>swaggerA2019Admin.json</value>
    <comment>A360 Admin Swagger APIs</comment>
  </data>
  <data name="SwaggerElevenAdmin" xml:space="preserve">
    <value>swaggerElevenxAdmin.json</value>
    <comment>11x Admin swagger APIs</comment>
  </data>
  <data name="SwaggerElevenPatchAdmin" xml:space="preserve">
    <value>swaggerElevenPatchAdmin.json</value>
    <comment>11x patch after 11.3.5, applicable Admin Swagger Apis</comment>
  </data>
  <data name="SwaggerFile" xml:space="preserve">
    <value>swagger.json</value>
    <comment>11x swagger file to load the APIs with request params</comment>
  </data>
</root>