<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute name="errorCode" type="xsd:string" msdata:Ordinal="5" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonHelp" errorCode="001" xml:space="preserve">
    <value>해당 SQL 엔드포인트를 통해 Dataverse에 연결</value>
  </data>
  <data name="ButtonTitle" errorCode="002" xml:space="preserve">
    <value>Dataverse</value>
  </data>
  <data name="ServerCaption" errorCode="003" xml:space="preserve">
    <value>환경 도메인</value>
  </data>
  <data name="ServerDescription" errorCode="004" xml:space="preserve">
    <value>연결할 Dataverse 환경을 지정합니다. 이 필드는 선택 사항이며 지정하지 않으면 로그인한 사용자가 사용할 수 있는 모든 Dataverse 환경이 "데이터 선택" 화면에 표시됩니다.</value>
  </data>
  <data name="LongDescription" errorCode="005" xml:space="preserve">
    <value>Dataverse 인스턴스(Dynamics 365 및 PowerApps)에 연결합니다.</value>
  </data>
  <data name="ErrorInvalidHost" errorCode="006" xml:space="preserve">
    <value>Dataverse 커넥터에서는 '#{0}'에 대한 도메인이 지원되지 않습니다.</value>
  </data>
  <data name="LoadDataError" errorCode="007" xml:space="preserve">
    <value>간접 환경 테이블에서 데이터를 로드하는 것은 지원되지 않습니다.</value>
  </data>
  <data name="InvalidOptionsKey" errorCode="008" xml:space="preserve">
    <value>'#{0}' 유효한 옵션이 아닙니다. 유효한 옵션은 '#{1}'입니다.</value>
  </data>
  <data name="InvalidOptionsValue" errorCode="009" xml:space="preserve">
    <value>이 함수는 값이 '#{0}' 인 옵션 '#{1}'을(를) 지원하지 않습니다.</value>
  </data>
  <data name="ServerFormatError" errorCode="010" xml:space="preserve">
    <value>서버 이름 형식 '#{0}'이(가) 유효하지 않습니다. 서버 이름에서 "https://"와 같은 스키마를 제거하세요.</value>
  </data>
  <data name="CreateNavigationPropertiesCaption" errorCode="011" xml:space="preserve">
    <value>관계 열 포함</value>
  </data>
  <data name="OptionsParameterCaption" errorCode="012" xml:space="preserve">
    <value>옵션</value>
  </data>
  <data name="OptionsParameterDescription" errorCode="013" xml:space="preserve">
    <value>Dataverse 인스턴스에 연결하는 옵션 지정</value>
  </data>
</root>