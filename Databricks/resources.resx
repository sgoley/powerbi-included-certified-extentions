<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedOptionsLabel" xml:space="preserve">
    <value>Advanced Options</value>
  </data>
  <data name="AzureActiveDirectoryLabel" xml:space="preserve">
    <value>Azure Active Directory</value>
  </data>
  <data name="BatchSizeHelp" xml:space="preserve">
    <value>The batch size used for fetching, as maximum number of rows</value>
  </data>
  <data name="BatchSizeLabel" xml:space="preserve">
    <value>Batch Size (rows)</value>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>Import data from Azure Databricks</value>
  </data>
  <data name="ButtonTitle" xml:space="preserve">
    <value>Azure Databricks</value>
  </data>
  <data name="MultiCloudButtonHelp" xml:space="preserve">
    <value>Import data from Databricks</value>
  </data>
  <data name="MultiCloudButtonTitle" xml:space="preserve">
    <value>Databricks</value>
  </data>
  <data name="CatalogHelp" xml:space="preserve">
    <value>Select a default catalog for the connection.</value>
  </data>
  <data name="CatalogLabel" xml:space="preserve">
    <value>Default catalog</value>
  </data>
  <data name="DatabaseHelp" xml:space="preserve">
    <value>Limit the connection to the selected database. This might make listing tables faster, however it will prevent query folding for queries that hit multiple different databases.</value>
  </data>
  <data name="DatabaseLabel" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="DataSourceLabel" xml:space="preserve">
    <value>Azure Databricks</value>
  </data>
  <data name="DataSourceName" xml:space="preserve">
    <value>Azure Databricks</value>
  </data>
  <data name="MultiCloudDataSourceLabel" xml:space="preserve">
    <value>Databricks</value>
  </data>
  <data name="MultiCloudDataSourceName" xml:space="preserve">
    <value>Databricks</value>
  </data>
  <data name="EnableAutomaticProxyDiscoveryFlagsHelp" xml:space="preserve">
    <value>This enables automatic Windows System wide automatic Proxy Discovery.</value>
  </data>
  <data name="EnableAutomaticProxyDiscoveryFlagsLabel" xml:space="preserve">
    <value>Automatic Proxy Discovery</value>
  </data>
  <data name="ErrorAadInvalidDomain" xml:space="preserve">
    <value>AAD is not supported for domain: #{0}.</value>
    <comment>#{0}: Domain</comment>
  </data>
  <data name="ErrorAadInvalidLocation" xml:space="preserve">
    <value>Unexpected authorization endpoint received from server</value>
  </data>
  <data name="ErrorAadRedirectFailed" xml:space="preserve">
    <value>Failed to retrieve authorization endpoint for organization.</value>
  </data>
  <data name="ErrorAdvancedOptionValue" xml:space="preserve">
    <value>Invalid value '#{0}' for field #{1}.</value>
    <comment>#{0}: Field value, #{1}: Field name</comment>
  </data>
  <data name="ErrorExpectedSqlString" xml:space="preserve">
    <value>Expected SQL query, but got null or an empty value.</value>
  </data>
  <data name="ErrorInvalidHost" xml:space="preserve">
    <value>Host is not a valid domain name: #{0}</value>
    <comment>#{0}: Domain</comment>
  </data>
  <data name="ErrorMultiCloudOAuthOnAzureNotSupported" xml:space="preserve">
    <value>Host is in Azure. For Azure endpoints, use `Azure Databricks` Datasource: #{0}</value>
    <comment>#{0}: Domain</comment>
  </data>
  <data name="ErrorInvalidHttpPath" xml:space="preserve">
    <value>Invalid HTTP path: #{0}.</value>
    <comment>#{0}: HTTP Path</comment>
  </data>
  <data name="ErrorMissingClientLibrary" xml:space="preserve">
    <value>The Databricks ODBC driver is not installed on the host. Please install the appropriate driver.</value>
  </data>
  <data name="ErrorOdbcAccessDenied" xml:space="preserve">
    <value>ODBC Connection failed with provided credentials. Try again with different credentials or a different authentication mechanism.</value>
  </data>
  <data name="ErrorOdbcCouldNotConnect" xml:space="preserve">
    <value>Could not connect to server. Please double check your ODBC configuration. </value>
  </data>
   <data name="AutomaticProxyDiscoveryFlagDisabledLabel" xml:space="preserve">
    <value>Disabled (default)</value>
  </data>
  <data name="AutomaticProxyDiscoveryFlagEnabledLabel" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="HttpPathHelp" xml:space="preserve">
    <value>The HTTP path of the cluster.</value>
  </data>
  <data name="HttpPathLabel" xml:space="preserve">
    <value>HTTP Path</value>
  </data>
  <data name="PersonalAccessTokenLabel" xml:space="preserve">
    <value>Personal Access Token</value>
  </data>
  <data name="OIDCLabel" xml:space="preserve">
    <value>OAuth (OIDC)</value>
  </data>
  <data name="QueryDataSourceDescription" xml:space="preserve">
    <value>Define a Databricks data source for running SQL queries</value>
  </data>
  <data name="QueryDataSourceInstanceDescription" xml:space="preserve">
    <value>Run a SQL query on Databricks and retrieve the results</value>
  </data>
  <data name="QueryDataSourceInstanceName" xml:space="preserve">
    <value>Databricks SQL Query</value>
  </data>
  <data name="QueryDataSourceName" xml:space="preserve">
    <value>Databricks SQL Query Source</value>
  </data>
  <data name="ServerHostNameHelp" xml:space="preserve">
    <value>The hostname of the Databricks server.</value>
  </data>
  <data name="ServerHostNameLabel" xml:space="preserve">
    <value>Server Hostname</value>
  </data>
  <data name="SqlQueryHelp" xml:space="preserve">
    <value>Enter a SQL query to run on Databricks</value>
  </data>
  <data name="SqlQueryLabel" xml:space="preserve">
    <value>SQL Query</value>
  </data>
  <data name="UsernamePasswordLabel" xml:space="preserve">
    <value>Username / Password</value>
  </data>
</root>