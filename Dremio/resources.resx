<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationLabel" xml:space="preserve">
    <value>Username/Password</value>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>Import data from Dremio.</value>
  </data>
  <data name="DremioButtonTitle" xml:space="preserve">
    <value>Dremio Software</value>
    <comment>This is the name of the connector as it shows up in Power BI's Get Data dialog.</comment>
  </data>
  <data name="DremioCloudButtonTitle" xml:space="preserve">
    <value>Dremio Cloud</value>
    <comment>This is the name of the connector as it shows up in Power BI's Get Data dialog.</comment>
  </data>
  <data name="DremioDatabase_LongDescription" xml:space="preserve">
    <value>Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource</value>
  </data>
  <data name="ExampleDremioDescription" xml:space="preserve">
    <value>How to return the list of datasets on localhost. This uses the default encrypted connection.</value>
  </data>
  <data name="ExampleDremioDescriptionV300" xml:space="preserve">
    <value>How to return the list of datasets on localhost with an encrypted connection.</value>
  </data>
  <data name="ExampleDremioResult" xml:space="preserve">
    <value>A table listing the datasets on localhost.</value>
  </data>
  <data name="DremioCloudDatabase_LongDescription" xml:space="preserve">
    <value>Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.</value>
  </data>
  <data name="ExampleDremioCloudDescription" xml:space="preserve">
    <value>How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.</value>
  </data>
  <data name="ExampleDremioCloudResult" xml:space="preserve">
    <value>A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.</value>
  </data>
  <data name="DremioCloudDatabaseByServer_LongDescription" xml:space="preserve">
    <value>Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource</value>
  </data>
  <data name="ExampleDremioCloudByServerDescription" xml:space="preserve">
    <value>How to return the list of datasets on a server on Dremio Cloud.</value>
  </data>
  <data name="ExampleDremioCloudByServerResult" xml:space="preserve">
    <value>A table listing the datasets on a server.</value>
  </data>
  <data name="InvalidServerNameError" xml:space="preserve">
    <value>Invalid server name specified.</value>
  </data>
  <data name="DriverNotInstalledError" xml:space="preserve">
    <value>The Dremio ODBC driver is not installed. Please install the appropriate driver from https://www.dremio.com/drivers/.</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Dremio</value>
  </data>
  <data name="SoftwareServerParameterCaption" xml:space="preserve">
    <value>Dremio Server</value>
  </data>
  <data name="CloudServerParameterCaption" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="SoftwareServerParameterSampleValues" xml:space="preserve">
    <value>servername:31010</value>
  </data>
  <data name="CloudServerParameterDescription" xml:space="preserve">
    <value>Server is sql.dremio.cloud for Dremio Cloud US, sql.eu.dremio.cloud for Dremio Cloud Europe or &lt;coordinator&gt;:31010 for Dremio Software</value>
  </data>
  <data name="CloudServerParameterSampleValues" xml:space="preserve">
    <value>sql.dremio.cloud</value>
  </data>
  <data name="EngineParameterCaption" xml:space="preserve">
    <value>Engine</value>
  </data>
  <data name="EngineParameterSampleValues" xml:space="preserve">
    <value>engine</value>
  </data>
  <data name="EngineParameterSoftwareDescription" xml:space="preserve">
    <value>The name of engine on which to run the query. If you do not specify an engine, Dremio will auto-select an engine based on the projectâ€™s Engine Routing rules.</value>
  </data>
  <data name="EngineParameterCloudDescription" xml:space="preserve">
    <value>The name of engine on which to run the query. If you do not specify an engine, Dremio will auto-select an engine based on the projectâ€™s Engine Routing rules.</value>
  </data>
  <data name="ProjectIdParameterCaption" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectIdParameterSampleValues" xml:space="preserve">
    <value>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</value>
  </data>
  <data name="ProjectIdParameterDescription" xml:space="preserve">
    <value>The UUID of the project. You can find this on the Project Settings &gt; General Information page. (Dremio Cloud only)</value>
  </data>
  <data name="RoutingQueueParameterCaption" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="RoutingQueueParameterSampleValues" xml:space="preserve">
    <value>queue</value>
  </data>
  <data name="RoutingQueueParameterDescription" xml:space="preserve">
    <value>Used for workload management</value>
  </data>
  <data name="RoutingQueueParameterCloudDescription" xml:space="preserve">
    <value>The name of the queue to which this query should be assigned. If you do not specify a queue, Dremio will auto-select a queue based on the Queue Routing rules. (Dremio Software only)</value>
  </data>
  <data name="RoutingTagParameterCaption" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="RoutingTagParameterSampleValues" xml:space="preserve">
    <value>tag</value>
  </data>
  <data name="RoutingTagParameterDescription" xml:space="preserve">
    <value>Used for workload management</value>
  </data>
  <data name="RoutingTagParameterCloudDescription" xml:space="preserve">
    <value>An arbitrary tag that you can refer to in Queue Routing rules. (Dremio Software only)</value>
  </data>
  <data name="NoopSkipTakeError" xml:space="preserve">
    <value>no-op skip take.</value>
  </data>
  <data name="PATLabel" xml:space="preserve">
    <value>Personal Access Token</value>
  </data>
  <data name="PATKeyLabel" xml:space="preserve">
    <value>Access Token</value>
  </data>
  <data name="SSLCaption" xml:space="preserve">
    <value>Encryption</value>
  </data>
  <data name="SSLParameterDescription" xml:space="preserve">
    <value>Encryption must be enabled if connecting direct from PBI Service</value>
  </data>
  <data name="CloudSSLCaption" xml:space="preserve">
    <value>Trusted certificates location</value>
  </data>
  <data name="CloudSSLParameterDescription" xml:space="preserve">
    <value>Alternative location of trusted certificates if not using the default system trust store</value>
  </data>
</root>

