//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

let
  Account = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "balance",
          SearchParameterType = "quantity",
          DataType = "Quantity",
          Path = "Account.balance",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "balance",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "balance",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Account.balance",
          Operator = v,
          FieldName = "number"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "balance",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "balance",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Account.balance",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "balance",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "balance",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Account.balance",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "balance",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Account.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "owner",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Account.owner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "owner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Account.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Account.coveragePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "coveragePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Account.coveragePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "coveragePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Account.coveragePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "coveragePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Account.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Account.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Account.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Account.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Account.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Account.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AllergyIntolerance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.category",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "category",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "criticality",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.criticality",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "criticality",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "AllergyIntolerance.recordedDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "recordedDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "last-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "AllergyIntolerance.lastOccurence",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastOccurence",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "recorder",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.recorder",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "recorder",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "reporter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.reporter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "reporter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "substance",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.substance.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AllergyIntolerance.substance.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AllergyIntolerance.substance.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AllergyIntolerance.substance.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.substance.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "substance",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AllergyIntolerance.substance",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "substance",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.reaction",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "onset",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "AllergyIntolerance.reaction.onset",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "onset",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "exposureRoute",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "route",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.reaction.exposureRoute",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "exposureRoute",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AllergyIntolerance.reaction.severity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "severity",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.reaction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "manifestation",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "AllergyIntolerance.reaction.manifestation",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "AllergyIntolerance.reaction.manifestation.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "manifestation",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AllergyIntolerance.reaction.manifestation",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Appointment = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Appointment.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Appointment.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Appointment.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Appointment.participant.actor",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "location",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Appointment.participant.status",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "status",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AppointmentResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "actor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AppointmentResponse.actor",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "location",
              SearchParameterType = "reference"
            ],
            [
              SearchParameterName = "patient",
              SearchParameterType = "reference"
            ],
            [
              SearchParameterName = "practitioner",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "appointment",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AppointmentResponse.appointment",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "appointment",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "part-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AppointmentResponse.participantStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "participantStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AppointmentResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AppointmentResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AuditEvent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "action",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AuditEvent.event.action",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "action",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "AuditEvent.event.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "site",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.site",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "site",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "AuditEvent.source.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "source",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "AuditEvent.event.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "AuditEvent.event.type",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "event",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AuditEvent.event.type",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "event",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.event.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "event",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "subtype",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "event",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.event.subtype",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AuditEvent.event.subtype",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.event.subtype",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AuditEvent.event.subtype",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.event.subtype",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "object",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.object",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "desc",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "AuditEvent.object.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identity",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AuditEvent.object.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identity",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.object.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identity",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.object.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identity",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.object.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "object-type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AuditEvent.object.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "object-type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.object.type",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "object-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AuditEvent.object.type",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "object-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.object.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reference",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AuditEvent.object.reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.participant.network.address",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "address",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "network",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "altid",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.participant.altId",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "altId",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "AuditEvent.participant.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AuditEvent.participant.reference",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AuditEvent.participant.userId",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "userId",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.participant.userId",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.participant.userId",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.participant.userId",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "userId",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.participant",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "policy",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "AuditEvent.participant.policy",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "policy",
                          SearchParameterType = "uri",
                          DataType = "uri",
                          Path = "AuditEvent.participant.policy",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Basic = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Basic.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Basic.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Basic.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Basic.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Basic.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Basic.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Basic.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Basic.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Binary = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "contenttype",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Binary.contentType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "contentType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  BodySite = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "BodySite.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "BodySite.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "BodySite.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "BodySite.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "BodySite.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "BodySite.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Bundle = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Bundle.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CarePlan = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "CarePlan.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CarePlan.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CarePlan.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CarePlan.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "activity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.activity",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "detail",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "CarePlan.activity.detail.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activitycode",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activitycode",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activitycode",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activitycode",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activitycode",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CarePlan.activity.detail.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activitydate",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "CarePlan.activity.detail.scheduled.Period",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 3
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Period",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "scheduled",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activitydate",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "CarePlan.activity.detail.scheduled.Period",
                  Operator = v,
                  FieldName = "start",
                  UnionElement = 1,
                  UnionElementCount = 3
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Period",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "scheduled",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "detail",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activitydate",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "CarePlan.activity.detail.scheduled.Period",
                  Operator = v,
                  FieldName = "end",
                  UnionElement = 1,
                  UnionElementCount = 3
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Period",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "scheduled",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "detail",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activitydate",
                  SearchParameterType = "date",
                  DataType = "string",
                  Path = "CarePlan.activity.detail.scheduled.string",
                  Operator = v,
                  UnionElement = 2,
                  UnionElementCount = 3
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "string",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "scheduled",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activityreference",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.activity.reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "activity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.activity",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "performer",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "CarePlan.activity.detail.performer",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "CarePlan.activity.detail.performer",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "addresses",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.addresses",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "condition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.addresses",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "goal",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.goal",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "goal",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.goal",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.participant.member",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "member",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "relatedPlan",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.relatedPlan",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relatedcode",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CarePlan.relatedPlan.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relatedplan",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.relatedPlan.plan",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "plan",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Claim = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "Claim.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Claim.priority",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Claim.priority",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Claim.priority",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "use",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Claim.use",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "use",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Claim.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Claim.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ClaimResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClaimResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ClaimResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ClinicalImpression = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "assessor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.assessor",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "assessor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ClinicalImpression.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "previous",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.previous",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "previous",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ClinicalImpression.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "trigger",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.trigger.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "trigger",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "trigger",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.trigger.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "trigger-code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ClinicalImpression.trigger.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "trigger-code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ClinicalImpression.trigger.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "trigger-code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ClinicalImpression.trigger.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "trigger-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.trigger.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "trigger-code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ClinicalImpression.trigger.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "trigger",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "action",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.action",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "action",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.action",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "finding",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.finding",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.finding.item.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ClinicalImpression.finding.item.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ClinicalImpression.finding.item.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ClinicalImpression.finding.item.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ClinicalImpression.finding.item.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "finding",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.finding.item",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "investigations",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.investigations",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.investigations.item",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "investigation",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ClinicalImpression.investigations.item",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "plan",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.plan",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "plan",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.plan",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "problem",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.problem",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "problem",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.problem",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "resolved",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.resolved",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.resolved.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resolved",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ClinicalImpression.resolved.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resolved",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ClinicalImpression.resolved.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resolved",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ClinicalImpression.resolved.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resolved",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ClinicalImpression.resolved.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "resolved",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.resolved",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "ruledOut",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.ruledOut",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.ruledOut.item.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ruledout",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ClinicalImpression.ruledOut.item.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ruledout",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ClinicalImpression.ruledOut.item.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ruledout",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ClinicalImpression.ruledOut.item.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ruledout",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ClinicalImpression.ruledOut.item.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ruledout",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.ruledOut.item",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Communication = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Communication.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Communication.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Communication.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Communication.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "received",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Communication.received",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "received",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.requestDetail",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestDetail",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sender",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.sender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sender",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sent",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Communication.sent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "sent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Communication.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Communication.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "medium",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.medium",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Communication.medium.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Communication.medium.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "medium",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.medium",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Communication.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CommunicationRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "CommunicationRequest.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CommunicationRequest.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CommunicationRequest.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CommunicationRequest.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "priority",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.priority.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "CommunicationRequest.priority.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CommunicationRequest.priority.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CommunicationRequest.priority.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.priority.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CommunicationRequest.priority",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requested",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CommunicationRequest.requestedOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "requestedOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.requester",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requester",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sender",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.sender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sender",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CommunicationRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "time",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CommunicationRequest.scheduled.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "scheduled",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "CommunicationRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "medium",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.medium",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CommunicationRequest.medium.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "medium",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.medium",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CommunicationRequest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Composition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "class",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.class.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Composition.class.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.class",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "confidentiality",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Composition.confidentiality",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "confidentiality",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Composition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Composition.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Composition.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Composition.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Composition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Composition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Composition.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "attester",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.attester",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "attester",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Composition.attester.party",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "party",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Composition.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.event",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "Composition.event.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Composition.event.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Composition.event.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.event",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.event.code",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Composition.event.code.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Composition.event.code.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Composition.event.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "section",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.section",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.section.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Composition.section.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "section",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.section.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "section",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.section",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "entry",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.section.entry",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "entry",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Composition.section.entry",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ConceptMap = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ConceptMap.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ConceptMap.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ConceptMap.source.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sourceuri",
          SearchParameterType = "reference",
          DataType = "uri",
          Path = "ConceptMap.source.uri",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "uri",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ConceptMap.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target",
          SearchParameterType = "reference",
          DataType = "uri",
          Path = "ConceptMap.target.uri",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "uri",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ConceptMap.target.Reference",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "target",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ConceptMap.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "sourcecode",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ConceptMap.element.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "sourcesystem",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ConceptMap.element.codeSystem",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "codeSystem",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.element",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.element.target",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "targetcode",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ConceptMap.element.target.code",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "targetsystem",
                          SearchParameterType = "uri",
                          DataType = "uri",
                          Path = "ConceptMap.element.target.codeSystem",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "codeSystem",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.element",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.element.target",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "dependsOn",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ConceptMap.element.target.dependsOn",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "dependson",
                                  SearchParameterType = "uri",
                                  DataType = "uri",
                                  Path = "ConceptMap.element.target.dependsOn.element",
                                  Operator = v
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "element",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.element",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.element.target",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "product",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ConceptMap.element.target.product",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "product",
                                  SearchParameterType = "uri",
                                  DataType = "uri",
                                  Path = "ConceptMap.element.target.product.element",
                                  Operator = v
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "element",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ConceptMap.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ConceptMap.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ConceptMap.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ConceptMap.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ConceptMap.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Condition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "asserter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.asserter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "asserter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "clinicalstatus",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Condition.clinicalStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "clinicalStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date-recorded",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Condition.dateRecorded",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateRecorded",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 0,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Condition.onset.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 1,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 1,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "onset",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 1,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "onset",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "Range",
          Path = "Condition.onset.Range",
          Operator = v,
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Range",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "decimal",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "lowNumber",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "uri",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "system",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "code",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "code",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "decimal",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "highNumber",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "uri",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "system",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "code",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "code",
          UnionElement = 2,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 2,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset",
          SearchParameterType = "date",
          DataType = "string",
          Path = "Condition.onset.string",
          Operator = v,
          UnionElement = 3,
          UnionElementCount = 4,
          Alternates = {
            [
              SearchParameterName = "onset-info",
              SearchParameterType = "string",
              UnionElement = 3,
              UnionElementCount = 4
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "string",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "severity",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.severity.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.severity.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "severity",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.severity",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "severity",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "summary",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "stage",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.stage.summary.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.stage.summary.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "stage",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.stage.summary",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "summary",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "stage",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.bodySite",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.bodySite.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Condition.bodySite.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "body-site",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "evidence",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.evidence",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.evidence.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Condition.evidence.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Condition.evidence.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Condition.evidence.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Condition.evidence.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "evidence",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.evidence.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Condition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Conformance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Conformance.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Conformance.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "fhirversion",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Conformance.version",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "version",
              SearchParameterType = "token"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Conformance.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Conformance.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "software",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Conformance.software.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "software",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Conformance.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Conformance.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "format",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.format",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Conformance.format",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "messaging",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.messaging",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "event",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Conformance.messaging.event",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Conformance.messaging.event.code",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Conformance.messaging.event.code",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Conformance.messaging.event.code",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Conformance.messaging.event.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supported-profile",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Conformance.profile",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.rest",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "mode",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Conformance.rest.mode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "mode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.rest",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "resource",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Conformance.rest.resource",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "profile",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Conformance.rest.resource.profile",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "profile",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resource",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Conformance.rest.resource.type",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "type",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Conformance.rest",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "service",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "security",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Conformance.rest.security.service",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Conformance.rest.security.service.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Conformance.rest.security.service.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Conformance.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Conformance.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Conformance.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "security",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Conformance.rest.security.service",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Contract = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Contract.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.actor",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.actor.entity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "entity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "signer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.signer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "signer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.signer.party",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "party",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.subject",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "patient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.subject",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "subject",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Coverage = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Coverage.group",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "group",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "issuer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Coverage.issuer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "issuer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "plan",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Coverage.plan",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "plan",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subplan",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Coverage.subPlan",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "subPlan",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "Coverage.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Coverage.type",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Coverage.type",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Coverage.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Coverage.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Coverage.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DataElement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DataElement.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DataElement.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "stringency",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DataElement.stringency",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "stringency",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "DataElement.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "description",
                  SearchParameterType = "string",
                  DataType = "markdown",
                  Path = "DataElement.element.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "definition",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.element",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DataElement.element.code",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DataElement.element.code",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DataElement.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DataElement.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DataElement.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DataElement.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DataElement.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DataElement.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DetectedIssue = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DetectedIssue.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DetectedIssue.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DetectedIssue.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DetectedIssue.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DetectedIssue.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DetectedIssue.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "implicated",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DetectedIssue.implicated",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "implicated",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DetectedIssue.implicated",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Device = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "manufacturer",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "model",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.model",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "model",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.owner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "owner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Device.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Device.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Device.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "udi",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.udi",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "udi",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Device.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Device.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Device.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceComponent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "parent",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceComponent.parent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceComponent.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceComponent.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceComponent.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceComponent.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceMetric = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DeviceMetric.category",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "category",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DeviceMetric.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "parent",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceMetric.parent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceMetric.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceMetric.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceMetric.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceUseRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseRequest.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceUseStatement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseStatement.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseStatement.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DiagnosticOrder = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticOrder.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "orderer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticOrder.orderer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "orderer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticOrder.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DiagnosticOrder.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticOrder.event",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticOrder.event.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "event-date",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "DiagnosticOrder.event.dateTime",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "dateTime",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "event-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticOrder.event.status",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "status",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticOrder.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DiagnosticOrder.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticOrder.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticOrder.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticOrder.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticOrder.item",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "bodySite",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "DiagnosticOrder.item.bodySite.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "bodysite",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DiagnosticOrder.item.bodySite.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "bodysite",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DiagnosticOrder.item.bodySite.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "bodysite",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DiagnosticOrder.item.bodySite.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "bodysite",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DiagnosticOrder.item.bodySite.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticOrder.item.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "DiagnosticOrder.item.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DiagnosticOrder.item.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DiagnosticOrder.item.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DiagnosticOrder.item.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DiagnosticOrder.item.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticOrder.item.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "item-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticOrder.item.status",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "status",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticOrder.item",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "event",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DiagnosticOrder.item.event",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "item-date",
                          SearchParameterType = "date",
                          DataType = "dateTime",
                          Path = "DiagnosticOrder.item.event.dateTime",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "dateTime",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "item-past-status",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DiagnosticOrder.item.event.status",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "status",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticOrder.specimen",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specimen",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticOrder.specimen",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DiagnosticReport = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DiagnosticReport.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DiagnosticReport.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DiagnosticReport.effective.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "DiagnosticReport.effective.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DiagnosticReport.effective.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DiagnosticReport.effective.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticReport.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "issued",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "DiagnosticReport.issued",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "issued",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticReport.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticReport.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DiagnosticReport.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "codedDiagnosis",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.codedDiagnosis",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DiagnosticReport.codedDiagnosis.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "diagnosis",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.codedDiagnosis",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DiagnosticReport.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "image",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.image",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "image",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.image.link",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "link",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.request",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "request",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.request",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "result",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.result",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "result",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.result",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.specimen",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specimen",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.specimen",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DocumentManifest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentManifest.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DocumentManifest.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "masterIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "masterIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentManifest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "DocumentManifest.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "source",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DocumentManifest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentManifest.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "content-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.content.p.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "p",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.related.ref",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "ref",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DocumentReference = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authenticator",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.authenticator",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "authenticator",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "class",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.class.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.class.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.class",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "custodian",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.custodian",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "custodian",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DocumentReference.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.context.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "facilityType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "context",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.facilityType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "facility",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.context.facilityType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "facilityType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DocumentReference.masterIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "masterIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "masterIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "indexed",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "DocumentReference.indexed",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "indexed",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "DocumentReference.context.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.context.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.context.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "practiceSetting",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "context",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.practiceSetting.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "setting",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.context.practiceSetting",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "practiceSetting",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DocumentReference.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "language",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.content.attachment.language",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "language",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "attachment",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "DocumentReference.content.attachment.url",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "url",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "attachment",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.content",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "format",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DocumentReference.content.format",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "format",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DocumentReference.content.format",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "format",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DocumentReference.content.format",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "format",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DocumentReference.content.format",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "format",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DocumentReference.content.format",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.event",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DocumentReference.context.event.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "event",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.event",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.context.related.ref",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "ref",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "relatesTo",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.relatesTo",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relatesto",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.relatesTo.target",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relation",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.relatesTo.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "securityLabel",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.securityLabel",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DocumentReference.securityLabel.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.securityLabel",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EligibilityRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EligibilityRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EligibilityRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EligibilityResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EligibilityResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EligibilityResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Encounter = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "appointment",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.appointment",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "appointment",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Encounter.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Encounter.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Encounter.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "length",
          SearchParameterType = "number",
          DataType = "Quantity",
          Path = "Encounter.length",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "length",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "length",
          SearchParameterType = "number",
          DataType = "decimal",
          Path = "Encounter.length",
          Operator = v,
          FieldName = "number"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "length",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "length",
          SearchParameterType = "number",
          DataType = "uri",
          Path = "Encounter.length",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "length",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "length",
          SearchParameterType = "number",
          DataType = "code",
          Path = "Encounter.length",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "length",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "part-of",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Encounter.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "episodeOfCare",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.episodeOfCare",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "episodeofcare",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.episodeOfCare",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specialArrangement",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "hospitalization",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.hospitalization.specialArrangement",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.hospitalization.specialArrangement.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "special-arrangement",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.hospitalization.specialArrangement",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Encounter.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "incomingReferral",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.incomingReferral",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "incomingreferral",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.incomingReferral",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "indication",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.indication",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "condition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.indication",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "indication",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "procedure",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.location",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.location.location",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "location",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "Encounter.location.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Encounter.location.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Encounter.location.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.participant.individual",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "individual",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.participant",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.participant.type",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Encounter.participant.type.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.participant.type",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reason",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.reason",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.reason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.reason.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.reason",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EnrollmentRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EnrollmentRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EnrollmentRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EnrollmentResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EnrollmentResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EpisodeOfCare = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "care-manager",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.careManager",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "careManager",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "EpisodeOfCare.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EpisodeOfCare.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EpisodeOfCare.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "EpisodeOfCare.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "careTeam",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.careTeam",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "team-member",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "EpisodeOfCare.careTeam.member",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "member",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "condition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.condition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "condition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "EpisodeOfCare.condition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "referralRequest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.referralRequest",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "incomingreferral",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "EpisodeOfCare.referralRequest",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "EpisodeOfCare.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ExplanationOfBenefit = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ExplanationOfBenefit.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  FamilyMemberHistory = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "FamilyMemberHistory.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "FamilyMemberHistory.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "FamilyMemberHistory.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "relationship",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.relationship.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "relationship",
          SearchParameterType = "token",
          DataType = "string",
          Path = "FamilyMemberHistory.relationship",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "relationship",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "condition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.condition",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "FamilyMemberHistory.condition.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.condition.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Flag = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Flag.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Flag.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Flag.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Goal = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Goal.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Goal.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "targetdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Goal.target.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Goal.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Goal.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Goal.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Goal.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Goal.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Group = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "actual",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Group.actual",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "actual",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Group.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Group.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Group.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Group.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "characteristic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.characteristic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Group.characteristic.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Group.characteristic.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "characteristic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.characteristic.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "exclude",
                  SearchParameterType = "token",
                  DataType = "boolean",
                  Path = "Group.characteristic.exclude",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "exclude",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Group.characteristic.value.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "value",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Group.characteristic.value.CodeableConcept.coding",
                          Operator = v,
                          UnionElement = 0,
                          UnionElementCount = 4
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "value",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Group.characteristic.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 0,
                          UnionElementCount = 4
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "value",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Group.characteristic.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 0,
                          UnionElementCount = 4
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "value",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Group.characteristic.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.characteristic.value.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "boolean",
                  Path = "Group.characteristic.value.boolean",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "boolean",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "Quantity",
                  Path = "Group.characteristic.value.Quantity",
                  Operator = v,
                  UnionElement = 2,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Quantity",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "decimal",
                  Path = "Group.characteristic.value.Quantity",
                  Operator = v,
                  FieldName = "number",
                  UnionElement = 2,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.characteristic.value.Quantity",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 2,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Group.characteristic.value.Quantity",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 2,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "Range",
                  Path = "Group.characteristic.value.Range",
                  Operator = v,
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Range",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "decimal",
                  Path = "Group.characteristic.value.Range.low",
                  Operator = v,
                  FieldName = "lowNumber",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "low",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.characteristic.value.Range.low",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "low",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Group.characteristic.value.Range.low",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "low",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "decimal",
                  Path = "Group.characteristic.value.Range.high",
                  Operator = v,
                  FieldName = "highNumber",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "high",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.characteristic.value.Range.high",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "high",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Group.characteristic.value.Range.high",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 3,
                  UnionElementCount = 4
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "high",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Range",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Group.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "member",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.member",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "member",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Group.member.entity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "entity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  HealthcareService = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "HealthcareService.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "HealthcareService.serviceName",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "serviceName",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "HealthcareService.providedBy",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "providedBy",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "serviceCategory",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.serviceCategory.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "servicecategory",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "HealthcareService.serviceCategory.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "servicecategory",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "HealthcareService.serviceCategory.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "servicecategory",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "HealthcareService.serviceCategory.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "servicecategory",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.serviceCategory.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "servicecategory",
          SearchParameterType = "token",
          DataType = "string",
          Path = "HealthcareService.serviceCategory",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "serviceCategory",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "characteristic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.characteristic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "HealthcareService.characteristic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "characteristic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.characteristic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "HealthcareService.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "programName",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.programName",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "programname",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "HealthcareService.programName",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "serviceType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.serviceType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "type",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "HealthcareService.serviceType.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "servicetype",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "HealthcareService.serviceType.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "servicetype",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "HealthcareService.serviceType.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "servicetype",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "HealthcareService.serviceType.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "servicetype",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "HealthcareService.serviceType.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "servicetype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.serviceType.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImagingObjectSelection = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingObjectSelection.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authoring-time",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImagingObjectSelection.authoringTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoringTime",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingObjectSelection.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "title",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingObjectSelection.title.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "title",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingObjectSelection.title.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "title",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingObjectSelection.title.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "title",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingObjectSelection.title.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "title",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingObjectSelection.title.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingObjectSelection.title",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "title",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "study",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingObjectSelection.study",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImagingStudy = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ImagingStudy.accession",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "accession",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accession",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accession",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "accession",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingStudy.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "started",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImagingStudy.started",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "started",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "order",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.order",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "order",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ImagingStudy.order",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "bodySite",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingStudy.series.modality",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "modality",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "instance",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingStudy.series.instance",
                  Value = { }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Immunization = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Immunization.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "lot-number",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Immunization.lotNumber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lotNumber",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "manufacturer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "notgiven",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Immunization.wasNotGiven",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "wasNotGiven",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.requester",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requester",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Immunization.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "vaccineCode",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.vaccineCode.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "vaccine-code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Immunization.vaccineCode",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "vaccineCode",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reason",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "explanation",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.explanation.reason",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Immunization.explanation.reason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.explanation.reason",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reasonNotGiven",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "explanation",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.explanation.reasonNotGiven",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Immunization.explanation.reasonNotGiven.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason-not-given",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.explanation.reasonNotGiven",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Immunization.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.reaction",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reaction",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Immunization.reaction.detail",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "detail",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reaction-date",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Immunization.reaction.date",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "date",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "vaccinationProtocol",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.vaccinationProtocol",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImmunizationRecommendation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImmunizationRecommendation.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "date",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "ImmunizationRecommendation.recommendation.date",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "date",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "dose-sequence",
                  SearchParameterType = "number",
                  DataType = "integer",
                  Path = "ImmunizationRecommendation.recommendation.protocol.doseSequence",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "doseSequence",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "protocol",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "forecastStatus",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "status",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.recommendation.forecastStatus",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "forecastStatus",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "vaccineCode",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.recommendation.vaccineCode",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "vaccineCode",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "supportingImmunization",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.supportingImmunization",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "support",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.supportingImmunization",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "supportingPatientInformation",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.supportingPatientInformation",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "information",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.supportingPatientInformation",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImplementationGuide = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImplementationGuide.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ImplementationGuide.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "experimental",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "ImplementationGuide.experimental",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "experimental",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ImplementationGuide.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ImplementationGuide.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ImplementationGuide.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ImplementationGuide.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImplementationGuide.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "dependency",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImplementationGuide.dependency",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "dependency",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ImplementationGuide.dependency.uri",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "uri",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImplementationGuide.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImplementationGuide.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImplementationGuide.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImplementationGuide.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImplementationGuide.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImplementationGuide.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImplementationGuide.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  List = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "List.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "List.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "List.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "List.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "emptyReason",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "List.emptyReason.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "List.emptyReason.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "empty-reason",
          SearchParameterType = "token",
          DataType = "string",
          Path = "List.emptyReason",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "emptyReason",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "notes",
          SearchParameterType = "string",
          DataType = "string",
          Path = "List.note",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "note",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "List.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "List.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "entry",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "List.entry",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "item",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "List.entry.item",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Location = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-city",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.city",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "city",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-country",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.country",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "country",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-postalcode",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.postalCode",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "postalCode",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-state",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.state",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "state",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-use",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Location.address.use",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "use",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Location.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "partof",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Location.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Location.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Location.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Location.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Location.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Location.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Location.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Media = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Media.content.creation",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "creation",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operator",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.operator",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "operator",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "subtype",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Media.subtype.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Media.subtype.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subtype",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Media.subtype",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subtype",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Media.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "view",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Media.view.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Media.view.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "view",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Media.view",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "view",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Media.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Media.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Medication = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "container",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "package",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.package.container.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.package.container.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "container",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.package.container",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "package",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "form",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "product",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.product.form.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.product.form.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.product.form.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.product.form.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.product.form.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "form",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.product.form",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "form",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "product",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Medication.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "manufacturer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "package",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.package.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "content",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Medication.package.content.item",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "ingredient",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "product",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.product.ingredient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ingredient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Medication.product.ingredient.item",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationAdministration = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationAdministration.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivetime",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationAdministration.effectiveTime.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectiveTime",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivetime",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "MedicationAdministration.effectiveTime.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectiveTime",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivetime",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationAdministration.effectiveTime.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effectiveTime",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivetime",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationAdministration.effectiveTime.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effectiveTime",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "notgiven",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "MedicationAdministration.wasNotGiven",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "wasNotGiven",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "practitioner",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.practitioner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "practitioner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "prescription",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.prescription",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "prescription",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationAdministration.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.device",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "device",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationAdministration.device",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationAdministration.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationDispense = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "destination",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.destination",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "destination",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "dispenser",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.dispenser",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "dispenser",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "MedicationDispense.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MedicationDispense.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationDispense.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationDispense.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "whenhandedover",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationDispense.whenHandedOver",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "whenHandedOver",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "whenprepared",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationDispense.whenPrepared",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "whenPrepared",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "authorizingPrescription",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.authorizingPrescription",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "prescription",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.authorizingPrescription",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.receiver",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "receiver",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.receiver",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "responsibleParty",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "substitution",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.substitution.responsibleParty",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "responsibleparty",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.substitution.responsibleParty",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationOrder = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationOrder.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationOrder.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationOrder.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationOrder.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationOrder.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationOrder.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "datewritten",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationOrder.dateWritten",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateWritten",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationOrder.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationOrder.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationOrder.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "prescriber",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationOrder.prescriber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "prescriber",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationOrder.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationOrder.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationOrder.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationOrder.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationOrder.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationOrder.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationStatement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationStatement.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivedate",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationStatement.effective.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivedate",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "MedicationStatement.effective.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivedate",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationStatement.effective.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effectivedate",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationStatement.effective.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.informationSource",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "informationSource",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationStatement.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationStatement.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MessageHeader = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageHeader.response.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "response",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "MessageHeader.event",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "event",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "receiver",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.receiver",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "response-id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "MessageHeader.response.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "response",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "responsible",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.responsible",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "responsible",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "string",
          DataType = "string",
          Path = "MessageHeader.source.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source-uri",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "MessageHeader.source.endpoint",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "endpoint",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "timestamp",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "MessageHeader.timestamp",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "timestamp",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "data",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageHeader.data",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MessageHeader.data",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "destination",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageHeader.destination",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "destination",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "MessageHeader.destination.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "destination-uri",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "MessageHeader.destination.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "endpoint",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MessageHeader.destination.target",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  NamingSystem = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "NamingSystem.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NamingSystem.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "replaced-by",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NamingSystem.replacedBy",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "replacedBy",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "responsible",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.responsible",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "responsible",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NamingSystem.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NamingSystem.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NamingSystem.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.contact",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "contact",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "NamingSystem.contact.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.contact",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "telecom",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NamingSystem.contact.telecom",
                  Value = { }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "uniqueId",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.uniqueId",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "id-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NamingSystem.uniqueId.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "NamingSystem.uniqueId.value",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NamingSystem.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NamingSystem.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NamingSystem.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NamingSystem.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NamingSystem.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NamingSystem.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  NutritionOrder = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "additiveType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "enteralFormula",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.enteralFormula.additiveType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "additive",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NutritionOrder.enteralFormula.additiveType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "additiveType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "enteralFormula",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "datetime",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "NutritionOrder.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "baseFormulaType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "enteralFormula",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "formula",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NutritionOrder.enteralFormula.baseFormulaType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "baseFormulaType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "enteralFormula",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.orderer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "orderer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NutritionOrder.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "NutritionOrder.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "oralDiet",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.oralDiet.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NutritionOrder.oralDiet.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "oraldiet",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.oralDiet.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "supplement",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.supplement",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "type",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "NutritionOrder.supplement.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supplement",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.supplement.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Observation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "dataAbsentReason",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.dataAbsentReason.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "data-absent-reason",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.dataAbsentReason",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "dataAbsentReason",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.effective.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Observation.effective.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effective",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.effective.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.effective.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "effective",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "specimen",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.specimen",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Observation.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "value",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.value.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-concept",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.value.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.value.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "Quantity",
          Path = "Observation.value.Quantity",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Quantity",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "number"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-string",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Observation.value.string",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "string",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "component",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.component",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "dataAbsentReason",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.dataAbsentReason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.dataAbsentReason",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "dataAbsentReason",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.value.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-concept",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.value.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "Quantity",
                  Path = "Observation.component.value.Quantity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Quantity",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "decimal",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "number"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "uri",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "code",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-string",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Observation.component.value.string",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "string",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Observation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Observation.performer",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-target",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Observation.related.target",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.related.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  OperationDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "base",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "OperationDefinition.base",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "base",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "OperationDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "instance",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "OperationDefinition.instance",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "instance",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "OperationDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "OperationDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "system",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "OperationDefinition.system",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "OperationDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "OperationDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "parameter",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OperationDefinition.parameter",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "profile",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "OperationDefinition.parameter.profile",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "profile",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OperationDefinition.type",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "OperationDefinition.type",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  OperationOutcome = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Order = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Order.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Order.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Order.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Order.target",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "when",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Order.when.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "when_code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Order.when.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "when_code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Order.when.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "when_code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Order.when.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "when_code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Order.when.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "when_code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Order.when.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "when",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "detail",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Order.detail",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "detail",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Order.detail",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Order.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Order.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Order.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Order.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Order.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  OrderResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OrderResponse.orderStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "orderStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "OrderResponse.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "OrderResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "who",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "OrderResponse.who",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "who",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "fulfillment",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OrderResponse.fulfillment",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "fulfillment",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "OrderResponse.fulfillment",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OrderResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "OrderResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "OrderResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "OrderResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "OrderResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Organization = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Organization.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Organization.name",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "phonetic",
              SearchParameterType = "string"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "partof",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Organization.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Organization.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Organization.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Organization.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Organization.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Organization.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Organization.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Parameters = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Patient = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Patient.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "breed",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "animal",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.animal.breed.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Patient.animal.breed.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "animal-breed",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Patient.animal.breed",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "breed",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "animal",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "species",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "animal",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.animal.species.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Patient.animal.species.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "animal-species",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Patient.animal.species",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "species",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "animal",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Patient.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "deathdate",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Patient.deceased.dateTime",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "deceased",
              SearchParameterType = "token",
              UnionElement = 1,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "deceased",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "deceased",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Patient.deceased.boolean",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "boolean",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "deceased",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Patient.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Patient.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "careProvider",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.careProvider",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "careprovider",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Patient.careProvider",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "communication",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.communication",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "language",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Patient.communication.language.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Patient.communication.language.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "language",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.communication.language",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "language",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Patient.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "link",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.link",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "link",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Patient.link.other",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "other",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.name",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.name",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "family",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Patient.name.family",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "family",
                          SearchParameterType = "string",
                          DataType = "string",
                          Path = "Patient.name.family",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.name",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "given",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Patient.name.given",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "given",
                          SearchParameterType = "string",
                          DataType = "string",
                          Path = "Patient.name.given",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PaymentNotice = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentNotice.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PaymentNotice.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PaymentReconciliation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentReconciliation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Person = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Person.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Person.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Person.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Person.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Person.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "link",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.link",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "link",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Person.link.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "relatedperson",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.name",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Practitioner = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Practitioner.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Practitioner.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "communication",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.communication",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.communication.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Practitioner.communication.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "communication",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.communication",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Practitioner.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "family",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "name",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.name.family",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "family",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.name.family",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "given",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "name",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.name.given",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "given",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.name.given",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "practitionerRole",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.practitionerRole",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "organization",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Practitioner.practitionerRole.managingOrganization",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "managingOrganization",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "role",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.practitionerRole.role.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Practitioner.practitionerRole.role.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Practitioner.practitionerRole.role.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Practitioner.practitionerRole.role.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Practitioner.practitionerRole.role.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "role",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.practitionerRole.role",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "practitionerRole",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.practitionerRole",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "location",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.practitionerRole.location",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "location",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Practitioner.practitionerRole.location",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "practitionerRole",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.practitionerRole",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "specialty",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.practitionerRole.specialty",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Practitioner.practitionerRole.specialty.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "specialty",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Practitioner.practitionerRole.specialty.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "specialty",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Practitioner.practitionerRole.specialty.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "specialty",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Practitioner.practitionerRole.specialty.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "specialty",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Practitioner.practitionerRole.specialty.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "specialty",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Practitioner.practitionerRole.specialty",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Procedure = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Procedure.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Procedure.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Procedure.performed.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performed",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Procedure.performed.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performed",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Procedure.performed.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "performed",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Procedure.performed.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "performed",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Procedure.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Procedure.performer.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcedureRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "orderer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.orderer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "orderer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcedureRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcessRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "action",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ProcessRequest.action",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "action",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessRequest.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessRequest.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcessRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcessRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcessResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requestorganization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.requestOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requestprovider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.requestProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcessResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcessResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Provenance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "end",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Provenance.period.end",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Provenance.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Provenance.period.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.agent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "agent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Provenance.agent.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "userid",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Provenance.agent.userId",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "userId",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "userid",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Provenance.agent.userId",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "userid",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Provenance.agent.userId",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "userid",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Provenance.agent.userId",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "userId",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "entity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.entity",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Provenance.entity.reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entitytype",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Provenance.entity.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entitytype",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Provenance.entity.type",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entitytype",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Provenance.entity.type",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entitytype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Provenance.entity.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "signature",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.signature",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Provenance.signature.type",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "sigtype",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Provenance.signature.type",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "sigtype",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "sigtype",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "sigtype",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.target",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "patient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Provenance.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "target",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Questionnaire = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Questionnaire.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Questionnaire.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.group.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "concept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "group",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Questionnaire.group.concept",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Questionnaire.group.concept",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Questionnaire.group.concept",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Questionnaire.group.concept",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.group.concept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Questionnaire.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Questionnaire.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  QuestionnaireResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "QuestionnaireResponse.authored",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authored",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "questionnaire",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.questionnaire",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "questionnaire",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "QuestionnaireResponse.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ReferralRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ReferralRequest.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ReferralRequest.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "priority",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.priority.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ReferralRequest.priority.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.priority.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ReferralRequest.priority.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.priority.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.priority",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ReferralRequest.requester",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requester",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "specialty",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.specialty.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "specialty",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.specialty",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "specialty",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ReferralRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ReferralRequest.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ReferralRequest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  RelatedPerson = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "RelatedPerson.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "RelatedPerson.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RelatedPerson.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "RelatedPerson.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "RelatedPerson.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  RiskAssessment = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "condition",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.condition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "condition",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "RiskAssessment.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "RiskAssessment.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "method",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "RiskAssessment.method.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "RiskAssessment.method.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "method",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.method",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "method",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Schedule = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "actor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Schedule.actor",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Schedule.planningHorizon",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "planningHorizon",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Schedule.planningHorizon",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "planningHorizon",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Schedule.planningHorizon",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "planningHorizon",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Schedule.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Schedule.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Schedule.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Schedule.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Schedule.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Schedule.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Schedule.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Schedule.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SearchParameter = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "base",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.base",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "base",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "SearchParameter.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "SearchParameter.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "SearchParameter.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SearchParameter.target",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "SearchParameter.target",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Slot = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "fb-type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Slot.freeBusyType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "freeBusyType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "schedule",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Slot.schedule",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "schedule",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Slot.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "slot-type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Slot.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "slot-type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Slot.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "slot-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Slot.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "slot-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "slot-type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Slot.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Slot.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Slot.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Slot.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Specimen = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Specimen.accessionIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "accessionIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accessionIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accessionIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "accessionIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "bodySite",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "collection",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.collection.bodySite.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "bodysite",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.collection.bodySite",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collected",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Specimen.collection.collected.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "collected",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collected",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Specimen.collection.collected.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "collected",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collected",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Specimen.collection.collected.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collected",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "collection",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collected",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Specimen.collection.collected.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collected",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "collection",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collector",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Specimen.collection.collector",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "collector",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Specimen.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Specimen.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.container",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "type",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Specimen.container.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Specimen.container.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.container.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.container",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Specimen.container.identifier",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "Identifier",
                          Path = "Specimen.container.identifier",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "value",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "type",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Specimen.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.parent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "parent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Specimen.parent",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  StructureDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abstract",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "StructureDefinition.abstract",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "abstract",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "base",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "StructureDefinition.base",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "base",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context-type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.contextType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "contextType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "StructureDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "display",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.display",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "experimental",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "StructureDefinition.experimental",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "experimental",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.constrainedType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "constrainedType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "StructureDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "StructureDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.code",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "StructureDefinition.code",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "StructureDefinition.code",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "StructureDefinition.code",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.context",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ext-context",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "StructureDefinition.context",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "StructureDefinition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "snapshot",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.snapshot.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "base-path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.snapshot.element.base.path",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "base",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.snapshot.element.path",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "valueset",
                  SearchParameterType = "reference",
                  DataType = "uri",
                  Path = "StructureDefinition.snapshot.element.binding.valueSet.uri",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "uri",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "valueSet",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "binding",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "valueset",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "StructureDefinition.snapshot.element.binding.valueSet.Reference",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "valueSet",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "binding",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "StructureDefinition.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "StructureDefinition.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "StructureDefinition.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "StructureDefinition.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "StructureDefinition.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Subscription = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "criteria",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Subscription.criteria",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "criteria",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payload",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Subscription.channel.payload",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "payload",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Subscription.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Subscription.channel.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Subscription.channel.endpoint",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "endpoint",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Subscription.contact",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Subscription.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Subscription.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Substance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Substance.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Substance.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Substance.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Substance.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Substance.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "ingredient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.ingredient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Substance.ingredient.substance",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "substance",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "instance",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.instance",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Substance.instance.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "expiry",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Substance.instance.expiry",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "expiry",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "Quantity",
                  Path = "Substance.instance.quantity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "quantity",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "decimal",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "number"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "uri",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "code",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SupplyDelivery = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "SupplyDelivery.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyDelivery.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SupplyDelivery.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "supplier",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyDelivery.supplier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "supplier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyDelivery.receiver",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "receiver",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "SupplyDelivery.receiver",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SupplyRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "SupplyRequest.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "SupplyRequest.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "kind",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyRequest.kind.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "kind",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "SupplyRequest.kind.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "kind",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "SupplyRequest.kind.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "kind",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "SupplyRequest.kind.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "kind",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "SupplyRequest.kind.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.kind",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "kind",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyRequest.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyRequest.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SupplyRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "supplier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyRequest.supplier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supplier",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "SupplyRequest.supplier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  TestScript = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestScript.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "TestScript.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestScript.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "TestScript.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "capability",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "metadata",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "TestScript.metadata.capability",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "testscript-capability",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "TestScript.metadata.capability.description",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "description",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "capability",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "metadata",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "setup",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "TestScript.setup.metadata.capability",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "testscript-setup-capability",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "TestScript.setup.metadata.capability.description",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "description",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "test",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "TestScript.test",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "capability",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "metadata",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "TestScript.test.metadata.capability",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "testscript-test-capability",
                          SearchParameterType = "string",
                          DataType = "string",
                          Path = "TestScript.test.metadata.capability.description",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "description",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  ValueSet = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ValueSet.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "expansion",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ValueSet.expansion.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "expansion",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ValueSet.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ValueSet.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ValueSet.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ValueSet.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ValueSet.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "system",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ValueSet.codeSystem.system",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "codeSystem",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ValueSet.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ValueSet.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "concept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "codeSystem",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.codeSystem.concept",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ValueSet.codeSystem.concept.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "include",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "compose",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.compose.include",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reference",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ValueSet.compose.include.system",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "useContext",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.useContext",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ValueSet.useContext.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ValueSet.useContext.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ValueSet.useContext.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ValueSet.useContext.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ValueSet.useContext.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "context",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ValueSet.useContext",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  VisionPrescription = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "datewritten",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "VisionPrescription.dateWritten",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateWritten",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "prescriber",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.prescriber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "prescriber",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "VisionPrescription.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "VisionPrescription.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  }
in
  #table(
    type table [
      ResourceTypeName = text,
      Patterns = { record }
    ],
    {
      { "Account", Account },
      { "AllergyIntolerance", AllergyIntolerance },
      { "Appointment", Appointment },
      { "AppointmentResponse", AppointmentResponse },
      { "AuditEvent", AuditEvent },
      { "Basic", Basic },
      { "Binary", Binary },
      { "BodySite", BodySite },
      { "Bundle", Bundle },
      { "CarePlan", CarePlan },
      { "Claim", Claim },
      { "ClaimResponse", ClaimResponse },
      { "ClinicalImpression", ClinicalImpression },
      { "Communication", Communication },
      { "CommunicationRequest", CommunicationRequest },
      { "Composition", Composition },
      { "ConceptMap", ConceptMap },
      { "Condition", Condition },
      { "Conformance", Conformance },
      { "Contract", Contract },
      { "Coverage", Coverage },
      { "DataElement", DataElement },
      { "DetectedIssue", DetectedIssue },
      { "Device", Device },
      { "DeviceComponent", DeviceComponent },
      { "DeviceMetric", DeviceMetric },
      { "DeviceUseRequest", DeviceUseRequest },
      { "DeviceUseStatement", DeviceUseStatement },
      { "DiagnosticOrder", DiagnosticOrder },
      { "DiagnosticReport", DiagnosticReport },
      { "DocumentManifest", DocumentManifest },
      { "DocumentReference", DocumentReference },
      { "EligibilityRequest", EligibilityRequest },
      { "EligibilityResponse", EligibilityResponse },
      { "Encounter", Encounter },
      { "EnrollmentRequest", EnrollmentRequest },
      { "EnrollmentResponse", EnrollmentResponse },
      { "EpisodeOfCare", EpisodeOfCare },
      { "ExplanationOfBenefit", ExplanationOfBenefit },
      { "FamilyMemberHistory", FamilyMemberHistory },
      { "Flag", Flag },
      { "Goal", Goal },
      { "Group", Group },
      { "HealthcareService", HealthcareService },
      { "ImagingObjectSelection", ImagingObjectSelection },
      { "ImagingStudy", ImagingStudy },
      { "Immunization", Immunization },
      { "ImmunizationRecommendation", ImmunizationRecommendation },
      { "ImplementationGuide", ImplementationGuide },
      { "List", List },
      { "Location", Location },
      { "Media", Media },
      { "Medication", Medication },
      { "MedicationAdministration", MedicationAdministration },
      { "MedicationDispense", MedicationDispense },
      { "MedicationOrder", MedicationOrder },
      { "MedicationStatement", MedicationStatement },
      { "MessageHeader", MessageHeader },
      { "NamingSystem", NamingSystem },
      { "NutritionOrder", NutritionOrder },
      { "Observation", Observation },
      { "OperationDefinition", OperationDefinition },
      { "OperationOutcome", OperationOutcome },
      { "Order", Order },
      { "OrderResponse", OrderResponse },
      { "Organization", Organization },
      { "Parameters", Parameters },
      { "Patient", Patient },
      { "PaymentNotice", PaymentNotice },
      { "PaymentReconciliation", PaymentReconciliation },
      { "Person", Person },
      { "Practitioner", Practitioner },
      { "Procedure", Procedure },
      { "ProcedureRequest", ProcedureRequest },
      { "ProcessRequest", ProcessRequest },
      { "ProcessResponse", ProcessResponse },
      { "Provenance", Provenance },
      { "Questionnaire", Questionnaire },
      { "QuestionnaireResponse", QuestionnaireResponse },
      { "ReferralRequest", ReferralRequest },
      { "RelatedPerson", RelatedPerson },
      { "RiskAssessment", RiskAssessment },
      { "Schedule", Schedule },
      { "SearchParameter", SearchParameter },
      { "Slot", Slot },
      { "Specimen", Specimen },
      { "StructureDefinition", StructureDefinition },
      { "Subscription", Subscription },
      { "Substance", Substance },
      { "SupplyDelivery", SupplyDelivery },
      { "SupplyRequest", SupplyRequest },
      { "TestScript", TestScript },
      { "ValueSet", ValueSet },
      { "VisionPrescription", VisionPrescription }
    })
