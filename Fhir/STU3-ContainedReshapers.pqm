//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

let
  Contained.ExtractResources = (contained as list, resourceName as text) => if contained = null then null else List.Select(contained, each [resourceType] = resourceName),
  Contained.ToLists = (contained as nullable list) as nullable record => if contained = null then null else 
    [
      #"Account" = Contained.ExtractResources(contained, "Account"),
      #"ActivityDefinition" = Contained.ExtractResources(contained, "ActivityDefinition"),
      #"AdverseEvent" = Contained.ExtractResources(contained, "AdverseEvent"),
      #"AllergyIntolerance" = Contained.ExtractResources(contained, "AllergyIntolerance"),
      #"Appointment" = Contained.ExtractResources(contained, "Appointment"),
      #"AppointmentResponse" = Contained.ExtractResources(contained, "AppointmentResponse"),
      #"AuditEvent" = Contained.ExtractResources(contained, "AuditEvent"),
      #"Basic" = Contained.ExtractResources(contained, "Basic"),
      #"Binary" = Contained.ExtractResources(contained, "Binary"),
      #"BodySite" = Contained.ExtractResources(contained, "BodySite"),
      #"Bundle" = Contained.ExtractResources(contained, "Bundle"),
      #"CapabilityStatement" = Contained.ExtractResources(contained, "CapabilityStatement"),
      #"CarePlan" = Contained.ExtractResources(contained, "CarePlan"),
      #"CareTeam" = Contained.ExtractResources(contained, "CareTeam"),
      #"ChargeItem" = Contained.ExtractResources(contained, "ChargeItem"),
      #"Claim" = Contained.ExtractResources(contained, "Claim"),
      #"ClaimResponse" = Contained.ExtractResources(contained, "ClaimResponse"),
      #"ClinicalImpression" = Contained.ExtractResources(contained, "ClinicalImpression"),
      #"CodeSystem" = Contained.ExtractResources(contained, "CodeSystem"),
      #"Communication" = Contained.ExtractResources(contained, "Communication"),
      #"CommunicationRequest" = Contained.ExtractResources(contained, "CommunicationRequest"),
      #"CompartmentDefinition" = Contained.ExtractResources(contained, "CompartmentDefinition"),
      #"Composition" = Contained.ExtractResources(contained, "Composition"),
      #"ConceptMap" = Contained.ExtractResources(contained, "ConceptMap"),
      #"Condition" = Contained.ExtractResources(contained, "Condition"),
      #"Consent" = Contained.ExtractResources(contained, "Consent"),
      #"Contract" = Contained.ExtractResources(contained, "Contract"),
      #"Coverage" = Contained.ExtractResources(contained, "Coverage"),
      #"DataElement" = Contained.ExtractResources(contained, "DataElement"),
      #"DetectedIssue" = Contained.ExtractResources(contained, "DetectedIssue"),
      #"Device" = Contained.ExtractResources(contained, "Device"),
      #"DeviceComponent" = Contained.ExtractResources(contained, "DeviceComponent"),
      #"DeviceMetric" = Contained.ExtractResources(contained, "DeviceMetric"),
      #"DeviceRequest" = Contained.ExtractResources(contained, "DeviceRequest"),
      #"DeviceUseStatement" = Contained.ExtractResources(contained, "DeviceUseStatement"),
      #"DiagnosticReport" = Contained.ExtractResources(contained, "DiagnosticReport"),
      #"DocumentManifest" = Contained.ExtractResources(contained, "DocumentManifest"),
      #"DocumentReference" = Contained.ExtractResources(contained, "DocumentReference"),
      #"DomainResource" = Contained.ExtractResources(contained, "DomainResource"),
      #"EligibilityRequest" = Contained.ExtractResources(contained, "EligibilityRequest"),
      #"EligibilityResponse" = Contained.ExtractResources(contained, "EligibilityResponse"),
      #"Encounter" = Contained.ExtractResources(contained, "Encounter"),
      #"Endpoint" = Contained.ExtractResources(contained, "Endpoint"),
      #"EnrollmentRequest" = Contained.ExtractResources(contained, "EnrollmentRequest"),
      #"EnrollmentResponse" = Contained.ExtractResources(contained, "EnrollmentResponse"),
      #"EpisodeOfCare" = Contained.ExtractResources(contained, "EpisodeOfCare"),
      #"ExpansionProfile" = Contained.ExtractResources(contained, "ExpansionProfile"),
      #"ExplanationOfBenefit" = Contained.ExtractResources(contained, "ExplanationOfBenefit"),
      #"FamilyMemberHistory" = Contained.ExtractResources(contained, "FamilyMemberHistory"),
      #"Flag" = Contained.ExtractResources(contained, "Flag"),
      #"Goal" = Contained.ExtractResources(contained, "Goal"),
      #"GraphDefinition" = Contained.ExtractResources(contained, "GraphDefinition"),
      #"Group" = Contained.ExtractResources(contained, "Group"),
      #"GuidanceResponse" = Contained.ExtractResources(contained, "GuidanceResponse"),
      #"HealthcareService" = Contained.ExtractResources(contained, "HealthcareService"),
      #"ImagingManifest" = Contained.ExtractResources(contained, "ImagingManifest"),
      #"ImagingStudy" = Contained.ExtractResources(contained, "ImagingStudy"),
      #"Immunization" = Contained.ExtractResources(contained, "Immunization"),
      #"ImmunizationRecommendation" = Contained.ExtractResources(contained, "ImmunizationRecommendation"),
      #"ImplementationGuide" = Contained.ExtractResources(contained, "ImplementationGuide"),
      #"Library" = Contained.ExtractResources(contained, "Library"),
      #"Linkage" = Contained.ExtractResources(contained, "Linkage"),
      #"List" = Contained.ExtractResources(contained, "List"),
      #"Location" = Contained.ExtractResources(contained, "Location"),
      #"Measure" = Contained.ExtractResources(contained, "Measure"),
      #"MeasureReport" = Contained.ExtractResources(contained, "MeasureReport"),
      #"Media" = Contained.ExtractResources(contained, "Media"),
      #"Medication" = Contained.ExtractResources(contained, "Medication"),
      #"MedicationAdministration" = Contained.ExtractResources(contained, "MedicationAdministration"),
      #"MedicationDispense" = Contained.ExtractResources(contained, "MedicationDispense"),
      #"MedicationRequest" = Contained.ExtractResources(contained, "MedicationRequest"),
      #"MedicationStatement" = Contained.ExtractResources(contained, "MedicationStatement"),
      #"MessageDefinition" = Contained.ExtractResources(contained, "MessageDefinition"),
      #"MessageHeader" = Contained.ExtractResources(contained, "MessageHeader"),
      #"NamingSystem" = Contained.ExtractResources(contained, "NamingSystem"),
      #"NutritionOrder" = Contained.ExtractResources(contained, "NutritionOrder"),
      #"Observation" = Contained.ExtractResources(contained, "Observation"),
      #"OperationDefinition" = Contained.ExtractResources(contained, "OperationDefinition"),
      #"OperationOutcome" = Contained.ExtractResources(contained, "OperationOutcome"),
      #"Organization" = Contained.ExtractResources(contained, "Organization"),
      #"Parameters" = Contained.ExtractResources(contained, "Parameters"),
      #"Patient" = Contained.ExtractResources(contained, "Patient"),
      #"PaymentNotice" = Contained.ExtractResources(contained, "PaymentNotice"),
      #"PaymentReconciliation" = Contained.ExtractResources(contained, "PaymentReconciliation"),
      #"Person" = Contained.ExtractResources(contained, "Person"),
      #"PlanDefinition" = Contained.ExtractResources(contained, "PlanDefinition"),
      #"Practitioner" = Contained.ExtractResources(contained, "Practitioner"),
      #"PractitionerRole" = Contained.ExtractResources(contained, "PractitionerRole"),
      #"Procedure" = Contained.ExtractResources(contained, "Procedure"),
      #"ProcedureRequest" = Contained.ExtractResources(contained, "ProcedureRequest"),
      #"ProcessRequest" = Contained.ExtractResources(contained, "ProcessRequest"),
      #"ProcessResponse" = Contained.ExtractResources(contained, "ProcessResponse"),
      #"Provenance" = Contained.ExtractResources(contained, "Provenance"),
      #"Questionnaire" = Contained.ExtractResources(contained, "Questionnaire"),
      #"QuestionnaireResponse" = Contained.ExtractResources(contained, "QuestionnaireResponse"),
      #"ReferralRequest" = Contained.ExtractResources(contained, "ReferralRequest"),
      #"RelatedPerson" = Contained.ExtractResources(contained, "RelatedPerson"),
      #"RequestGroup" = Contained.ExtractResources(contained, "RequestGroup"),
      #"ResearchStudy" = Contained.ExtractResources(contained, "ResearchStudy"),
      #"ResearchSubject" = Contained.ExtractResources(contained, "ResearchSubject"),
      #"Resource" = Contained.ExtractResources(contained, "Resource"),
      #"RiskAssessment" = Contained.ExtractResources(contained, "RiskAssessment"),
      #"Schedule" = Contained.ExtractResources(contained, "Schedule"),
      #"SearchParameter" = Contained.ExtractResources(contained, "SearchParameter"),
      #"Sequence" = Contained.ExtractResources(contained, "Sequence"),
      #"ServiceDefinition" = Contained.ExtractResources(contained, "ServiceDefinition"),
      #"Slot" = Contained.ExtractResources(contained, "Slot"),
      #"Specimen" = Contained.ExtractResources(contained, "Specimen"),
      #"StructureDefinition" = Contained.ExtractResources(contained, "StructureDefinition"),
      #"StructureMap" = Contained.ExtractResources(contained, "StructureMap"),
      #"Subscription" = Contained.ExtractResources(contained, "Subscription"),
      #"Substance" = Contained.ExtractResources(contained, "Substance"),
      #"SupplyDelivery" = Contained.ExtractResources(contained, "SupplyDelivery"),
      #"SupplyRequest" = Contained.ExtractResources(contained, "SupplyRequest"),
      #"Task" = Contained.ExtractResources(contained, "Task"),
      #"TestReport" = Contained.ExtractResources(contained, "TestReport"),
      #"TestScript" = Contained.ExtractResources(contained, "TestScript"),
      #"ValueSet" = Contained.ExtractResources(contained, "ValueSet"),
      #"VisionPrescription" = Contained.ExtractResources(contained, "VisionPrescription")
    ],
  Contained.ReshapeRecord = (resource as nullable record) as nullable record =>
    if resource = null then null else if resource[contained]? = null then resource else resource & [ contained = Contained.ToLists(resource[contained]) ]
in
  Contained.ReshapeRecord
