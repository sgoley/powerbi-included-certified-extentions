//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

let
  Account = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Account.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "owner",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Account.owner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "owner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Account.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Account.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Account.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Account.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Account.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Account.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Account.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Account.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Account.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Account.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Account.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ActivityDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ActivityDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ActivityDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "ActivityDefinition.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ActivityDefinition.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ActivityDefinition.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ActivityDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ActivityDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ActivityDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ActivityDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ActivityDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ActivityDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ActivityDefinition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ActivityDefinition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ActivityDefinition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ActivityDefinition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ActivityDefinition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ActivityDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ActivityDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ActivityDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ActivityDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ActivityDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ActivityDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ActivityDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "library",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ActivityDefinition.library",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "depends-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ActivityDefinition.library",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "topic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ActivityDefinition.topic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ActivityDefinition.topic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ActivityDefinition.topic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ActivityDefinition.topic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ActivityDefinition.topic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ActivityDefinition.topic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "topic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ActivityDefinition.topic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AdverseEvent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AdverseEvent.category",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "category",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "AdverseEvent.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AdverseEvent.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "recorder",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AdverseEvent.recorder",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "recorder",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "seriousness",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "AdverseEvent.seriousness.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "seriousness",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AdverseEvent.seriousness.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "seriousness",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AdverseEvent.seriousness.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "seriousness",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AdverseEvent.seriousness.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "seriousness",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AdverseEvent.seriousness.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "seriousness",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AdverseEvent.seriousness",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "seriousness",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subject",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AdverseEvent.subject",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "AdverseEvent.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AdverseEvent.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AdverseEvent.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AdverseEvent.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AdverseEvent.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AdverseEvent.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AdverseEvent.reaction",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reaction",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AdverseEvent.reaction",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "study",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AdverseEvent.study",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "study",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AdverseEvent.study",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "suspectEntity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AdverseEvent.suspectEntity",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AdverseEvent.suspectEntity.instance",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "instance",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AllergyIntolerance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "asserter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.asserter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "asserter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "clinical-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.clinicalStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "clinicalStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AllergyIntolerance.code.coding",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AllergyIntolerance.code.coding",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AllergyIntolerance.code.coding",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AllergyIntolerance.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "criticality",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.criticality",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "criticality",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "AllergyIntolerance.assertedDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "assertedDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "last-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "AllergyIntolerance.lastOccurrence",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastOccurrence",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "recorder",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AllergyIntolerance.recorder",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "recorder",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "verification-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AllergyIntolerance.verificationStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "verificationStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.category",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AllergyIntolerance.category",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.reaction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "substance",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "AllergyIntolerance.reaction.substance.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "AllergyIntolerance.reaction.substance.coding",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "AllergyIntolerance.reaction.substance.coding",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "AllergyIntolerance.reaction.substance.coding",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AllergyIntolerance.reaction.substance.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.reaction.substance",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "substance",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "onset",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "AllergyIntolerance.reaction.onset",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "onset",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "exposureRoute",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "route",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AllergyIntolerance.reaction.exposureRoute.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "route",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AllergyIntolerance.reaction.exposureRoute",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "exposureRoute",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AllergyIntolerance.reaction.severity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "severity",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AllergyIntolerance.reaction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "manifestation",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "AllergyIntolerance.reaction.manifestation",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "AllergyIntolerance.reaction.manifestation.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "manifestation",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "AllergyIntolerance.reaction.manifestation.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "manifestation",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AllergyIntolerance.reaction.manifestation",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Appointment = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "appointmentType",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.appointmentType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "appointment-type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Appointment.appointmentType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "appointment-type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Appointment.appointmentType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "appointment-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Appointment.appointmentType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "appointment-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.appointmentType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "appointment-type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Appointment.appointmentType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "appointmentType",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Appointment.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Appointment.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Appointment.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "incomingReferral",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.incomingReferral",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "incomingreferral",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Appointment.incomingReferral",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Appointment.participant.actor",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "location",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Appointment.participant.status",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "status",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "serviceType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Appointment.serviceType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Appointment.serviceType.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Appointment.serviceType.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Appointment.serviceType.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Appointment.serviceType.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Appointment.serviceType.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "service-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Appointment.serviceType",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AppointmentResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "actor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AppointmentResponse.actor",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "location",
              SearchParameterType = "reference"
            ],
            [
              SearchParameterName = "patient",
              SearchParameterType = "reference"
            ],
            [
              SearchParameterName = "practitioner",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "appointment",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "AppointmentResponse.appointment",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "appointment",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "part-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AppointmentResponse.participantStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "participantStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AppointmentResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AppointmentResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AppointmentResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  AuditEvent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "action",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AuditEvent.action",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "action",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "AuditEvent.recorded",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "recorded",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "outcome",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AuditEvent.outcome",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "outcome",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "site",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.site",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "site",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "AuditEvent.source.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.source.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "source",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "AuditEvent.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "AuditEvent.type",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "AuditEvent.type",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "AuditEvent.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.agent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "AuditEvent.agent.network.address",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "address",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "network",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "agent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AuditEvent.agent.reference",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "agent-name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "AuditEvent.agent.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "altid",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.agent.altId",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "altId",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AuditEvent.agent.userId",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "userId",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.agent.userId",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.agent.userId",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "userId",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "user",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.agent.userId",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "userId",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.agent",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "policy",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "AuditEvent.agent.policy",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "policy",
                          SearchParameterType = "uri",
                          DataType = "uri",
                          Path = "AuditEvent.agent.policy",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.agent",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "AuditEvent.agent.role",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "AuditEvent.agent.role.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "AuditEvent.agent.role.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "AuditEvent.agent.role.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "AuditEvent.agent.role.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "AuditEvent.agent.role.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "agent-role",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "AuditEvent.agent.role",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "entity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.entity",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "AuditEvent.entity.reference",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "AuditEvent.entity.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.entity.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.entity.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.entity.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "AuditEvent.entity.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-role",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AuditEvent.entity.role",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "role",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-role",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.entity.role",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-role",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AuditEvent.entity.role",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-role",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.entity.role",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AuditEvent.entity.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.entity.type",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AuditEvent.entity.type",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.entity.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "subtype",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "AuditEvent.subtype",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "AuditEvent.subtype",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "AuditEvent.subtype",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "AuditEvent.subtype",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "AuditEvent.subtype",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Basic = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Basic.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Basic.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Basic.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Basic.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Basic.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Basic.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Basic.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Basic.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Basic.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Binary = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "contenttype",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Binary.contentType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "contentType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  BodySite = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "BodySite.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "BodySite.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "BodySite.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "BodySite.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "BodySite.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "BodySite.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "BodySite.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Bundle = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Bundle.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Bundle.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Bundle.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Bundle.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Bundle.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CapabilityStatement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CapabilityStatement.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "CapabilityStatement.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "fhirversion",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CapabilityStatement.version",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "version",
              SearchParameterType = "token"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CapabilityStatement.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CapabilityStatement.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "software",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CapabilityStatement.software.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "software",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CapabilityStatement.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CapabilityStatement.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "CapabilityStatement.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "format",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.format",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CapabilityStatement.format",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "implementationGuide",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.implementationGuide",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "guide",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "CapabilityStatement.implementationGuide",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CapabilityStatement.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CapabilityStatement.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CapabilityStatement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CapabilityStatement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CapabilityStatement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CapabilityStatement.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "messaging",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.messaging",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "event",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CapabilityStatement.messaging.event",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CapabilityStatement.messaging.event.code",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CapabilityStatement.messaging.event.code",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CapabilityStatement.messaging.event.code",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CapabilityStatement.messaging.event.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "code",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supported-profile",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CapabilityStatement.profile",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.rest",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "mode",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CapabilityStatement.rest.mode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "mode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.rest",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "resource",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CapabilityStatement.rest.resource",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resource",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CapabilityStatement.rest.resource.type",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "type",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "resource-profile",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "CapabilityStatement.rest.resource.profile",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "profile",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "rest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CapabilityStatement.rest",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "service",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "security",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "CapabilityStatement.rest.security.service",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "CapabilityStatement.rest.security.service.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security-service",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "CapabilityStatement.rest.security.service.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security-service",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "CapabilityStatement.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security-service",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "CapabilityStatement.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "security-service",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "CapabilityStatement.rest.security.service.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "security-service",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CapabilityStatement.rest.security.service",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CarePlan = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "CarePlan.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CarePlan.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CarePlan.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CarePlan.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CarePlan.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CarePlan.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CarePlan.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "activity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.activity",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "detail",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "CarePlan.activity.detail.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activity-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activity-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activity-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "activity-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CarePlan.activity.detail.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activity-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CarePlan.activity.detail.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "activity-reference",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.activity.reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "activity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.activity",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "performer",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "detail",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "CarePlan.activity.detail.performer",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "CarePlan.activity.detail.performer",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "addresses",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.addresses",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "condition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.addresses",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "careTeam",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.careTeam",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "care-team",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.careTeam",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CarePlan.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CarePlan.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CarePlan.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CarePlan.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CarePlan.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CarePlan.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "goal",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.goal",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "goal",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.goal",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "CarePlan.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CarePlan.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CarePlan.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CarePlan.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-of",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "replaces",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CarePlan.replaces",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "replaces",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CarePlan.replaces",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CareTeam = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "CareTeam.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CareTeam.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CareTeam.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CareTeam.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CareTeam.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CareTeam.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CareTeam.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CareTeam.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CareTeam.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CareTeam.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CareTeam.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CareTeam.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CareTeam.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CareTeam.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "CareTeam.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CareTeam.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CareTeam.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CareTeam.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CareTeam.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CareTeam.participant.member",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "member",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ChargeItem = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ChargeItem.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ChargeItem.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ChargeItem.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ChargeItem.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ChargeItem.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ChargeItem.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ChargeItem.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "entered-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ChargeItem.enteredDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "enteredDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ChargeItem.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "factor-override",
          SearchParameterType = "number",
          DataType = "decimal",
          Path = "ChargeItem.factorOverride",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "factorOverride",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ChargeItem.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ChargeItem.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ChargeItem.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ChargeItem.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ChargeItem.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performing-organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ChargeItem.performingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "quantity",
          SearchParameterType = "quantity",
          DataType = "Quantity",
          Path = "ChargeItem.quantity",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "quantity",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "quantity",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "ChargeItem.quantity",
          Operator = v,
          FieldName = "number"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "quantity",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "quantity",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "ChargeItem.quantity",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "quantity",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "quantity",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "ChargeItem.quantity",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "quantity",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requesting-organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ChargeItem.requestingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "account",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ChargeItem.account",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "account",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ChargeItem.account",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ChargeItem.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant-actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ChargeItem.participant.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "role",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ChargeItem.participant.role.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-role",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ChargeItem.participant.role.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-role",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ChargeItem.participant.role.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-role",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ChargeItem.participant.role.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-role",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ChargeItem.participant.role.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant-role",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ChargeItem.participant.role",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "service",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ChargeItem.service",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "service",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ChargeItem.service",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Claim = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Claim.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "facility",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.facility",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "facility",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "insurer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.insurer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "insurer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payee",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.payee.party",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "party",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "payee",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "priority",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Claim.priority.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Claim.priority.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Claim.priority.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Claim.priority.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priority",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Claim.priority.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Claim.priority",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "priority",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Claim.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "use",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Claim.use",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "use",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "careTeam",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Claim.careTeam",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "care-team",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Claim.careTeam.provider",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "provider",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Claim.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Claim.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Claim.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Claim.item",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "encounter",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Claim.item.encounter",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "encounter",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Claim.item.encounter",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ClaimResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ClaimResponse.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "disposition",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ClaimResponse.disposition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "disposition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "insurer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClaimResponse.insurer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "insurer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "outcome",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ClaimResponse.outcome.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ClaimResponse.outcome.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ClaimResponse.outcome.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ClaimResponse.outcome.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClaimResponse.outcome.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "outcome",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ClaimResponse.outcome",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "outcome",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClaimResponse.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payment-date",
          SearchParameterType = "date",
          DataType = "date",
          Path = "ClaimResponse.payment.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "payment",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClaimResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClaimResponse.requestProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClaimResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ClaimResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClaimResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ClinicalImpression = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ClinicalImpression.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "assessor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.assessor",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "assessor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "previous",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ClinicalImpression.previous",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "previous",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ClinicalImpression.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "action",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.action",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "action",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.action",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "finding",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.finding",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "item",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.finding.item.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ClinicalImpression.finding.item.CodeableConcept.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ClinicalImpression.finding.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ClinicalImpression.finding.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "finding-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ClinicalImpression.finding.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "finding-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.finding.item.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "finding-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.finding.item.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ClinicalImpression.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ClinicalImpression.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ClinicalImpression.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "investigation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.investigation",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ClinicalImpression.investigation.item",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "investigation",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ClinicalImpression.investigation.item",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "problem",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ClinicalImpression.problem",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "problem",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ClinicalImpression.problem",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CodeSystem = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "content-mode",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CodeSystem.content",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "content",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CodeSystem.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "CodeSystem.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "CodeSystem.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "CodeSystem.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CodeSystem.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CodeSystem.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CodeSystem.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CodeSystem.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CodeSystem.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "system",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "CodeSystem.url",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "url",
              SearchParameterType = "uri"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CodeSystem.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CodeSystem.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "concept",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CodeSystem.concept",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CodeSystem.concept.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "concept",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CodeSystem.concept",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "designation",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CodeSystem.concept.designation",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CodeSystem.concept.designation.language",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "language",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CodeSystem.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CodeSystem.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CodeSystem.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CodeSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CodeSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CodeSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CodeSystem.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Communication = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "received",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Communication.received",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "received",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sender",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Communication.sender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sender",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sent",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Communication.sent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "sent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Communication.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Communication.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Communication.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Communication.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Communication.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Communication.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Communication.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Communication.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Communication.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "medium",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.medium",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Communication.medium.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Communication.medium.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Communication.medium.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "medium",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Communication.medium",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-of",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Communication.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Communication.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Communication.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CommunicationRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CommunicationRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "CommunicationRequest.groupIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "groupIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "CommunicationRequest.groupIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CommunicationRequest.groupIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "CommunicationRequest.groupIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "groupIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "occurrence",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CommunicationRequest.occurrence.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "occurrence",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CommunicationRequest.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sender",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "CommunicationRequest.sender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sender",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CommunicationRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CommunicationRequest.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CommunicationRequest.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CommunicationRequest.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CommunicationRequest.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CommunicationRequest.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CommunicationRequest.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "CommunicationRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "medium",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.medium",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CommunicationRequest.medium.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "medium",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CommunicationRequest.medium.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "medium",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CommunicationRequest.medium",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CommunicationRequest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "replaces",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CommunicationRequest.replaces",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "replaces",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "CommunicationRequest.replaces",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  CompartmentDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CompartmentDefinition.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "CompartmentDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "CompartmentDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CompartmentDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CompartmentDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "CompartmentDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "CompartmentDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "CompartmentDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CompartmentDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "CompartmentDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "CompartmentDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "CompartmentDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "CompartmentDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "CompartmentDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "CompartmentDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "resource",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "CompartmentDefinition.resource",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "resource",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "CompartmentDefinition.resource.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Composition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Composition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Composition.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Composition.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Composition.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "class",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.class.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Composition.class.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.class.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Composition.class",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "confidentiality",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Composition.confidentiality",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "confidentiality",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Composition.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Composition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Composition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "attester",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.attester",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "attester",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Composition.attester.party",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "party",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Composition.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.event",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "Composition.event.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Composition.event.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Composition.event.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.event",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.event.code",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Composition.event.code.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Composition.event.code.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "context",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Composition.event.code.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "context",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Composition.event.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "relatesTo",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.relatesTo",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Composition.relatesTo.target.Identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Identifier",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Composition.relatesTo.target.Identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Identifier",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "target",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.relatesTo.target.Identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Identifier",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "target",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.relatesTo.target.Identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Identifier",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "target",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Composition.relatesTo.target.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "target",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "section",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.section",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.section.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Composition.section.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "section",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Composition.section.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "section",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Composition.section.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "section",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Composition.section",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "entry",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Composition.section.entry",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "entry",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Composition.section.entry",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ConceptMap = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ConceptMap.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ConceptMap.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ConceptMap.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ConceptMap.source.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "source",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source-uri",
          SearchParameterType = "reference",
          DataType = "uri",
          Path = "ConceptMap.source.uri",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "uri",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ConceptMap.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ConceptMap.target.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "target",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target-uri",
          SearchParameterType = "reference",
          DataType = "uri",
          Path = "ConceptMap.target.uri",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "uri",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ConceptMap.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ConceptMap.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ConceptMap.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.group",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "other",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ConceptMap.group.unmapped.url",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "url",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "unmapped",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "source-system",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ConceptMap.group.source",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "source",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target-system",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ConceptMap.group.target",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "target",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.group",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "element",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.group.element",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "source-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ConceptMap.group.element.code",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.group",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "element",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.group.element",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "target",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ConceptMap.group.element.target",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "target-code",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "ConceptMap.group.element.target.code",
                                  Operator = v
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.group",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "element",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.group.element",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "target",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ConceptMap.group.element.target",
                          Value = {
                            [
                              Kind = "Invocation",
                              Function = [
                                Kind = "Constant",
                                Value = Table.MatchesAnyRows
                              ],
                              Arguments = {
                                [
                                  Kind = "FieldAccess",
                                  MemberName = "dependsOn",
                                  Expression = RowExpression.Row
                                ],
                                [
                                  Kind = "RowExpression",
                                  Path = "ConceptMap.group.element.target.dependsOn",
                                  Value = {
                                    [
                                      Kind = "Binary",
                                      CaptureOperator = (v) => [
                                          SearchParameterName = "dependson",
                                          SearchParameterType = "uri",
                                          DataType = "uri",
                                          Path = "ConceptMap.group.element.target.dependsOn.property",
                                          Operator = v
                                        ],
                                      Left = [
                                        Kind = "FieldAccess",
                                        MemberName = "property",
                                        Expression = RowExpression.Row
                                      ],
                                      Right = [
                                        Kind = "Constant",
                                        CaptureValue = (v) => [ Value = v ]
                                      ]
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "group",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.group",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "element",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.group.element",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "target",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ConceptMap.group.element.target",
                          Value = {
                            [
                              Kind = "Invocation",
                              Function = [
                                Kind = "Constant",
                                Value = Table.MatchesAnyRows
                              ],
                              Arguments = {
                                [
                                  Kind = "FieldAccess",
                                  MemberName = "product",
                                  Expression = RowExpression.Row
                                ],
                                [
                                  Kind = "RowExpression",
                                  Path = "ConceptMap.group.element.target.product",
                                  Value = {
                                    [
                                      Kind = "Binary",
                                      CaptureOperator = (v) => [
                                          SearchParameterName = "product",
                                          SearchParameterType = "uri",
                                          DataType = "uri",
                                          Path = "ConceptMap.group.element.target.product.property",
                                          Operator = v
                                        ],
                                      Left = [
                                        Kind = "FieldAccess",
                                        MemberName = "property",
                                        Expression = RowExpression.Row
                                      ],
                                      Right = [
                                        Kind = "Constant",
                                        CaptureValue = (v) => [ Value = v ]
                                      ]
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ConceptMap.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ConceptMap.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ConceptMap.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ConceptMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ConceptMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ConceptMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ConceptMap.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Condition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "Range",
          Path = "Condition.abatement.Range",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Range",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "abatement",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Condition.abatement.Range.low",
          Operator = v,
          FieldName = "lowNumber",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Condition.abatement.Range.low",
          Operator = v,
          FieldName = "system",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Condition.abatement.Range.low",
          Operator = v,
          FieldName = "code",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Condition.abatement.Range.high",
          Operator = v,
          FieldName = "highNumber",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Condition.abatement.Range.high",
          Operator = v,
          FieldName = "system",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-age",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Condition.abatement.Range.high",
          Operator = v,
          FieldName = "code",
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "abatement",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-boolean",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Condition.abatement.boolean",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 6
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "boolean",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "abatement",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.abatement.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "abatement",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Condition.abatement.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "abatement",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.abatement.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "abatement",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.abatement.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "abatement",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abatement-string",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Condition.abatement.string",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "string",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "abatement",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "asserted-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.assertedDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "assertedDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "asserter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.asserter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "asserter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "clinical-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Condition.clinicalStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "clinicalStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Condition.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "Range",
          Path = "Condition.onset.Range",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Range",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "lowNumber",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "system",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Condition.onset.Range.low",
          Operator = v,
          FieldName = "code",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "low",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "highNumber",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "system",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-age",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Condition.onset.Range.high",
          Operator = v,
          FieldName = "code",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "high",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "Range",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "onset",
              Expression = RowExpression.Row
            ]
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Condition.onset.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "onset",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Condition.onset.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "onset",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "onset-info",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Condition.onset.string",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "string",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onset",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "severity",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.severity.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.severity.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "severity",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.severity.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "severity",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.severity",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "severity",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "summary",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "stage",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.stage.summary.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Condition.stage.summary.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "stage",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.stage.summary.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "stage",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Condition.stage.summary",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "summary",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "stage",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "verification-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Condition.verificationStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "verificationStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.bodySite",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.bodySite.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Condition.bodySite.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Condition.bodySite.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "body-site",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Condition.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Condition.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Condition.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Condition.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "evidence",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.evidence",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.evidence.code",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Condition.evidence.code.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "evidence",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Condition.evidence.code.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "evidence",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Condition.evidence.code.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "evidence",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Condition.evidence.code.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "evidence",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Condition.evidence.code.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Condition.evidence.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "evidence",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.evidence",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "detail",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Condition.evidence.detail",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "evidence-detail",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Condition.evidence.detail",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Condition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Condition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Condition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Consent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Consent.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Consent.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Consent.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Consent.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Consent.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Consent.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Consent.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Consent.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Consent.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Consent.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "action",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.action",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.action.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "action",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Consent.action.coding",
                          Operator = v,
                          UnionElement = 0,
                          UnionElementCount = 2
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "action",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Consent.action.coding",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 0,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "action",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Consent.action.coding",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 0,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "action",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Consent.action.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "action",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Consent.action",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.actor",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Consent.actor.reference",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Consent.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Consent.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Consent.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Consent.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Consent.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "consentingParty",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.consentingParty",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "consentor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Consent.consentingParty",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "data",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.data",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Consent.data.reference",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "reference",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "except",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.except",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "action",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.except.action",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Consent.except.action.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "action",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Consent.except.action.coding",
                                  Operator = v,
                                  UnionElement = 1,
                                  UnionElementCount = 2
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "action",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Consent.except.action.coding",
                                  Operator = v,
                                  FieldName = "system",
                                  UnionElement = 1,
                                  UnionElementCount = 2
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "action",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Consent.except.action.coding",
                                  Operator = v,
                                  FieldName = "code",
                                  UnionElement = 1,
                                  UnionElementCount = 2
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "action",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Consent.except.action.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "action",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Consent.except.action",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "except",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.except",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.except.actor",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "actor",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Consent.except.actor.reference",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "reference",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "except",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.except",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "data",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.except.data",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "data",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Consent.except.data.reference",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "reference",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "except",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.except",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "purpose",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.except.purpose",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "purpose",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Consent.except.purpose",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "purpose",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Consent.except.purpose",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "purpose",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Consent.except.purpose",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "purpose",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Consent.except.purpose",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "except",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.except",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "securityLabel",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Consent.except.securityLabel",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Consent.except.securityLabel",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Consent.except.securityLabel",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Consent.except.securityLabel",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Consent.except.securityLabel",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.organization",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "organization",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Consent.organization",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "purpose",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.purpose",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "purpose",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Consent.purpose",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "purpose",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Consent.purpose",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "purpose",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Consent.purpose",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "purpose",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Consent.purpose",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "securityLabel",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Consent.securityLabel",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Consent.securityLabel",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Consent.securityLabel",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Consent.securityLabel",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Consent.securityLabel",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Contract = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Contract.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Contract.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "issued",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Contract.issued",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "issued",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.agent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "agent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.agent.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "authority",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.authority",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "authority",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.authority",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "domain",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.domain",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "domain",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.domain",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "signer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.signer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "signer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.signer.party",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "party",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.subject",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "patient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Contract.subject",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "subject",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "term",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Contract.term",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "topic",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Contract.term.topic",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "term-topic",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "Contract.term.topic",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Coverage = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "beneficiary",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Coverage.beneficiary",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "beneficiary",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.class",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "class",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "dependent",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.dependent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dependent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.group",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "group",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "plan",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.plan",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "plan",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "policy-holder",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Coverage.policyHolder",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "policyHolder",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sequence",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.sequence",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "sequence",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subclass",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.subClass",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "subClass",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subgroup",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.subGroup",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "subGroup",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subplan",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Coverage.grouping.subPlan",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "subPlan",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "grouping",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subscriber",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Coverage.subscriber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subscriber",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Coverage.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Coverage.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Coverage.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Coverage.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Coverage.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Coverage.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Coverage.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Coverage.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Coverage.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "payor",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Coverage.payor",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Coverage.payor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DataElement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DataElement.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DataElement.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "stringency",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DataElement.stringency",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "stringency",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DataElement.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "DataElement.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DataElement.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "description",
                  SearchParameterType = "string",
                  DataType = "markdown",
                  Path = "DataElement.element.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "definition",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.element",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DataElement.element.code",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DataElement.element.code",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DataElement.element.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DataElement.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DataElement.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DataElement.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DataElement.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DataElement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DataElement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DataElement.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DataElement.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DetectedIssue = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DetectedIssue.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DetectedIssue.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DetectedIssue.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DetectedIssue.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DetectedIssue.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DetectedIssue.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DetectedIssue.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DetectedIssue.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "implicated",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DetectedIssue.implicated",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "implicated",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DetectedIssue.implicated",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Device = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device-name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.udi.name",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "udi",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device-name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.type.text",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 3
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "manufacturer",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "model",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.model",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "model",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.owner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "owner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Device.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Device.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Device.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Device.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Device.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "udi-carrier",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.udi.carrierHRF",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "carrierHRF",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "udi",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "udi-di",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Device.udi.deviceIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "deviceIdentifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "udi",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Device.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Device.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Device.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Device.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Device.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "device-name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Device.type.coding.display",
                  Operator = v,
                  UnionElement = 2,
                  UnionElementCount = 3
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceComponent = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DeviceComponent.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DeviceComponent.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceComponent.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceComponent.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "parent",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceComponent.parent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceComponent.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceComponent.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceComponent.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceComponent.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceComponent.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceMetric = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DeviceMetric.category",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "category",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DeviceMetric.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "parent",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceMetric.parent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceMetric.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceMetric.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceMetric.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceMetric.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceMetric.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "code",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.code.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceRequest.code.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceRequest.code.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceRequest.code.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceRequest.code.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceRequest.code.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceRequest.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored-on",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DeviceRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceRequest.code.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DeviceRequest.occurrence.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "occurrence",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event-date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "DeviceRequest.occurrence.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "occurrence",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DeviceRequest.occurrence.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "occurrence",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DeviceRequest.occurrence.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "occurrence",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DeviceRequest.groupIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "groupIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DeviceRequest.groupIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceRequest.groupIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceRequest.groupIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "groupIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "intent",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.intent.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "intent",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DeviceRequest.intent.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "intent",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceRequest.intent.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "intent",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DeviceRequest.intent.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "intent",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceRequest.intent.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DeviceRequest.intent",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "intent",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceRequest.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DeviceRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DeviceRequest.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DeviceRequest.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DeviceRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "priorRequest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceRequest.priorRequest",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "priorrequest",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DeviceRequest.priorRequest",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DeviceUseStatement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseStatement.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DeviceUseStatement.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DeviceUseStatement.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DeviceUseStatement.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DeviceUseStatement.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceUseStatement.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DeviceUseStatement.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DiagnosticReport = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DiagnosticReport.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticReport.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DiagnosticReport.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "context",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DiagnosticReport.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "issued",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "DiagnosticReport.issued",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "issued",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DiagnosticReport.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "codedDiagnosis",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.codedDiagnosis",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DiagnosticReport.codedDiagnosis.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "diagnosis",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DiagnosticReport.codedDiagnosis.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "diagnosis",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.codedDiagnosis",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DiagnosticReport.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DiagnosticReport.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "image",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.image",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "image",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.image.link",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "link",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.performer.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "result",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.result",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "result",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.result",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DiagnosticReport.specimen",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specimen",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DiagnosticReport.specimen",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DocumentManifest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "masterIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "system",
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "code",
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.masterIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "masterIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentManifest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentManifest.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentManifest.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentManifest.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DocumentManifest.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "DocumentManifest.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "source",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DocumentManifest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "content-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.content.p.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "p",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentManifest.identifier",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentManifest.identifier",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.identifier",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentManifest.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentManifest.related.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentManifest.related.ref",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "ref",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  DocumentReference = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "masterIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "system",
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "code",
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "masterIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.masterIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "masterIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.context.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authenticator",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.authenticator",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "authenticator",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "class",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.class.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.class.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "class",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.class.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.class",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "custodian",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "DocumentReference.custodian",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "custodian",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "string",
          Path = "DocumentReference.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "facilityType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "context",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.facilityType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "facility",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.facilityType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "facility",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.context.facilityType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "facilityType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "indexed",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "DocumentReference.indexed",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "indexed",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "DocumentReference.context.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.context.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "DocumentReference.context.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "practiceSetting",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "context",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.practiceSetting.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "setting",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.practiceSetting.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "setting",
          SearchParameterType = "token",
          DataType = "string",
          Path = "DocumentReference.context.practiceSetting",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "practiceSetting",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "DocumentReference.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.author",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "author",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.author",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "DocumentReference.content.format",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "format",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.content.format",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "format",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.content.format",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "format",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "format",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.content.format",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "format",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "language",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.content.attachment.language",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "language",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "attachment",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "DocumentReference.content.attachment.url",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "url",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "attachment",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.event",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DocumentReference.context.event.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "event",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DocumentReference.context.event.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "event",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.event",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "context",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.context.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.context.related.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.context.related.ref",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "ref",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "DocumentReference.identifier",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "DocumentReference.identifier",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.identifier",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "relatesTo",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.relatesTo",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relatesto",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "DocumentReference.relatesTo.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "relationship",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "DocumentReference.relatesTo"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relation",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "DocumentReference.relatesTo.code",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "relationship",
                      SearchParameterType = "reference",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "DocumentReference.relatesTo"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "securityLabel",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "DocumentReference.securityLabel",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "DocumentReference.securityLabel.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "securitylabel",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "DocumentReference.securityLabel.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "securitylabel",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "DocumentReference.securityLabel",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EligibilityRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EligibilityRequest.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityRequest.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "facility",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityRequest.facility",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "facility",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityRequest.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityRequest.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityRequest.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EligibilityRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EligibilityRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EligibilityResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EligibilityResponse.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "disposition",
          SearchParameterType = "string",
          DataType = "string",
          Path = "EligibilityResponse.disposition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "disposition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "insurer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityResponse.insurer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "insurer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "outcome",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "EligibilityResponse.outcome.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "EligibilityResponse.outcome.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EligibilityResponse.outcome.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "EligibilityResponse.outcome.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityResponse.outcome.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "outcome",
          SearchParameterType = "token",
          DataType = "string",
          Path = "EligibilityResponse.outcome",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "outcome",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityResponse.requestOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EligibilityResponse.requestProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EligibilityResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EligibilityResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EligibilityResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Encounter = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Encounter.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Encounter.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Encounter.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "appointment",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.appointment",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "appointment",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "Encounter.class",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "class",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Encounter.class",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Encounter.class",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "class",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Encounter.class",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "class",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "part-of",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "service-provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Encounter.serviceProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "serviceProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Encounter.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "diagnosis",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.diagnosis",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "diagnosis",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.diagnosis.condition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "condition",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "episodeOfCare",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.episodeOfCare",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "episodeofcare",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.episodeOfCare",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specialArrangement",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "hospitalization",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.hospitalization.specialArrangement",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.hospitalization.specialArrangement.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "special-arrangement",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.hospitalization.specialArrangement.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "special-arrangement",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.hospitalization.specialArrangement",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Encounter.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "incomingReferral",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.incomingReferral",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "incomingreferral",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.incomingReferral",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.location",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.location.location",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "location",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "Encounter.location.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Encounter.location.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location-period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Encounter.location.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Encounter.participant.individual",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "individual",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.participant",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.participant.type",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Encounter.participant.type.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "participant-type",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Encounter.participant.type.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.participant.type",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reason",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.reason",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.reason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.reason.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.reason.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.reason",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Encounter.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Encounter.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Encounter.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Encounter.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Encounter.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Endpoint = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "connection-type",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "Endpoint.connectionType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "connectionType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "connection-type",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Endpoint.connectionType",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "connectionType",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "connection-type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Endpoint.connectionType",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "connectionType",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "connection-type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Endpoint.connectionType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "connectionType",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Endpoint.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Endpoint.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Endpoint.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Endpoint.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Endpoint.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Endpoint.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Endpoint.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Endpoint.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "payloadType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Endpoint.payloadType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Endpoint.payloadType.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "payload-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Endpoint.payloadType.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "payload-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Endpoint.payloadType.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "payload-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Endpoint.payloadType.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "payload-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Endpoint.payloadType.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payload-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Endpoint.payloadType",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EnrollmentRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EnrollmentRequest.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EnrollmentRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EnrollmentRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EnrollmentResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EnrollmentResponse.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EnrollmentResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EnrollmentResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EnrollmentResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  EpisodeOfCare = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "EpisodeOfCare.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EpisodeOfCare.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "EpisodeOfCare.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "care-manager",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.careManager",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "careManager",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "EpisodeOfCare.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "EpisodeOfCare.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "diagnosis",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.diagnosis",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "condition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "EpisodeOfCare.diagnosis.condition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "condition",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "referralRequest",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.referralRequest",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "incomingreferral",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "EpisodeOfCare.referralRequest",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "EpisodeOfCare.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "EpisodeOfCare.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "EpisodeOfCare.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "EpisodeOfCare.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ExpansionProfile = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ExpansionProfile.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ExpansionProfile.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ExpansionProfile.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ExpansionProfile.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ExpansionProfile.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ExpansionProfile.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ExpansionProfile.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ExpansionProfile.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ExpansionProfile.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ExpansionProfile.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ExpansionProfile.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ExpansionProfile.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ExpansionProfile.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ExpansionProfile.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ExpansionProfile.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ExpansionProfile.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ExpansionProfile.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ExpansionProfile.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ExplanationOfBenefit = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "claim",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.claim",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "claim",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "coverage",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.insurance.coverage",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "coverage",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "insurance",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ExplanationOfBenefit.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "disposition",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ExplanationOfBenefit.disposition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "disposition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "facility",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.facility",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "facility",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payee",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.payee.party",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "party",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "payee",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ExplanationOfBenefit.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "careTeam",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ExplanationOfBenefit.careTeam",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "care-team",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ExplanationOfBenefit.careTeam.provider",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "provider",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ExplanationOfBenefit.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ExplanationOfBenefit.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ExplanationOfBenefit.item",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "encounter",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ExplanationOfBenefit.item.encounter",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "encounter",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ExplanationOfBenefit.item.encounter",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  FamilyMemberHistory = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "FamilyMemberHistory.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "FamilyMemberHistory.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "FamilyMemberHistory.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "relationship",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.relationship.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "relationship",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.relationship.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "relationship",
          SearchParameterType = "token",
          DataType = "string",
          Path = "FamilyMemberHistory.relationship",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "relationship",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "FamilyMemberHistory.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "condition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.condition",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "FamilyMemberHistory.condition.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "FamilyMemberHistory.condition.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.condition.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "FamilyMemberHistory.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "FamilyMemberHistory.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "FamilyMemberHistory.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Flag = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Flag.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Flag.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Flag.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Flag.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Flag.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Flag.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Flag.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Flag.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Flag.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Goal = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Goal.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start-date",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Goal.start.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "start",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Goal.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "target-date",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Goal.target.due.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "due",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "target",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Goal.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Goal.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Goal.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Goal.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Goal.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Goal.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Goal.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  GraphDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "GraphDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "GraphDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "GraphDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "GraphDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "token",
          DataType = "code",
          Path = "GraphDefinition.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "GraphDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "GraphDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "GraphDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "GraphDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "GraphDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "GraphDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "GraphDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "GraphDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "GraphDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "GraphDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Group = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "actual",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Group.actual",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "actual",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Group.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Group.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Group.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Group.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "characteristic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.characteristic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Group.characteristic.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          Alternates = {
                            [
                              SearchParameterName = "characteristic-value",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Group.characteristic"
                            ]
                          }
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "system",
                          Alternates = {
                            [
                              SearchParameterName = "characteristic-value",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Group.characteristic"
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "code",
                          Alternates = {
                            [
                              SearchParameterName = "characteristic-value",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Group.characteristic"
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Group.characteristic.code.coding",
                          Operator = v,
                          FieldName = "text",
                          Alternates = {
                            [
                              SearchParameterName = "characteristic-value",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Group.characteristic"
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "characteristic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.characteristic.code",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "characteristic-value",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Group.characteristic"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "exclude",
                  SearchParameterType = "token",
                  DataType = "boolean",
                  Path = "Group.characteristic.exclude",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "exclude",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Group.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Group.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "member",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Group.member",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "member",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Group.member.entity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "entity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  GuidanceResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "GuidanceResponse.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "GuidanceResponse.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "GuidanceResponse.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "GuidanceResponse.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "GuidanceResponse.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "token",
          DataType = "id",
          Path = "GuidanceResponse.requestId",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "requestId",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  HealthcareService = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "HealthcareService.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "HealthcareService.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "HealthcareService.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "HealthcareService.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "HealthcareService.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "HealthcareService.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "HealthcareService.providedBy",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "providedBy",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "characteristic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.characteristic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "HealthcareService.characteristic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "characteristic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "HealthcareService.characteristic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "characteristic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.characteristic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "endpoint",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.endpoint",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "endpoint",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "HealthcareService.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "HealthcareService.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.location",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "HealthcareService.location",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "programName",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.programName",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "programname",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "HealthcareService.programName",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "HealthcareService.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "HealthcareService.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "HealthcareService.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "HealthcareService.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "HealthcareService.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "HealthcareService.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "HealthcareService.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImagingManifest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingManifest.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingManifest.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authoring-time",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImagingManifest.authoringTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoringTime",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ImagingManifest.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ImagingManifest.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingManifest.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingManifest.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "study",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingManifest.study",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "imaging-study",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ImagingManifest.study.imagingStudy",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "imagingStudy",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "study",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingManifest.study",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "endpoint",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingManifest.study.endpoint",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "endpoint",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImagingManifest.study.endpoint",
                          Operator = v,
                          UnionElement = 0,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "study",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingManifest.study",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "series",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingManifest.study.series",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "endpoint",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "ImagingManifest.study.series.endpoint",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "endpoint",
                                  SearchParameterType = "reference",
                                  DataType = "string",
                                  Path = "ImagingManifest.study.series.endpoint",
                                  Operator = v,
                                  UnionElement = 1,
                                  UnionElementCount = 2
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "reference",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImagingStudy = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingStudy.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ImagingStudy.accession",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "accession",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accession",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accession",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingStudy.accession",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "accession",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImagingStudy.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "reason",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.reason.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingStudy.reason.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.reason.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingStudy.reason.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.reason.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "reason",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImagingStudy.reason",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "reason",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "started",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImagingStudy.started",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "started",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "basedon",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ImagingStudy.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "endpoint",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.endpoint",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "endpoint",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ImagingStudy.endpoint",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ImagingStudy.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "bodySite",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.series.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "bodySite",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ImagingStudy.series.modality",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "modality",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "modality",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImagingStudy.series.modality",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "modality",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "endpoint",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingStudy.series.endpoint",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "endpoint",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImagingStudy.series.endpoint",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "instance",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingStudy.series.instance",
                  Value = { }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "series",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImagingStudy.series",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "performer",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImagingStudy.series.performer",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImagingStudy.series.performer",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Immunization = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Immunization.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "lot-number",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Immunization.lotNumber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lotNumber",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Immunization.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "manufacturer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "notgiven",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Immunization.notGiven",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "notGiven",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Immunization.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "vaccineCode",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.vaccineCode.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.vaccineCode.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "vaccine-code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Immunization.vaccineCode",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "vaccineCode",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reason",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "explanation",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.explanation.reason",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Immunization.explanation.reason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Immunization.explanation.reason.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.explanation.reason",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reasonNotGiven",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "explanation",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.explanation.reasonNotGiven",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Immunization.explanation.reasonNotGiven.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Immunization.explanation.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason-not-given",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.explanation.reasonNotGiven",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Immunization.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Immunization.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "practitioner",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.practitioner",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "practitioner",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Immunization.practitioner.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reaction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.reaction",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reaction",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Immunization.reaction.detail",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "detail",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reaction-date",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Immunization.reaction.date",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "date",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "vaccinationProtocol",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Immunization.vaccinationProtocol",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImmunizationRecommendation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ImmunizationRecommendation.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "date",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "ImmunizationRecommendation.recommendation.date",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "date",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "forecastStatus",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "status",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.forecastStatus.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "status",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.recommendation.forecastStatus",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "forecastStatus",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "targetDisease",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.targetDisease.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "target-disease",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImmunizationRecommendation.recommendation.targetDisease.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "target-disease",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImmunizationRecommendation.recommendation.targetDisease.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "target-disease",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImmunizationRecommendation.recommendation.targetDisease.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "target-disease",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.targetDisease.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target-disease",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.recommendation.targetDisease",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "targetDisease",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "vaccineCode",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "vaccine-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.vaccineCode.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "vaccine-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImmunizationRecommendation.recommendation.vaccineCode",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "vaccineCode",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "supportingImmunization",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.supportingImmunization",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "support",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.supportingImmunization",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recommendation",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImmunizationRecommendation.recommendation",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "supportingPatientInformation",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImmunizationRecommendation.recommendation.supportingPatientInformation",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "information",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "ImmunizationRecommendation.recommendation.supportingPatientInformation",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ImplementationGuide = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ImplementationGuide.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ImplementationGuide.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "experimental",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "ImplementationGuide.experimental",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "experimental",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ImplementationGuide.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ImplementationGuide.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ImplementationGuide.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ImplementationGuide.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ImplementationGuide.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "dependency",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImplementationGuide.dependency",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "dependency",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ImplementationGuide.dependency.uri",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "uri",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImplementationGuide.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImplementationGuide.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ImplementationGuide.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ImplementationGuide.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ImplementationGuide.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ImplementationGuide.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ImplementationGuide.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "package",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ImplementationGuide.package",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "resource",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ImplementationGuide.package.resource",
                  Value = { }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Library = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Library.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "Library.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Library.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Library.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Library.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Library.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Library.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Library.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Library.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Library.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Library.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Library.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Library.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Library.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Library.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Library.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Library.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Library.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Library.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Library.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Library.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Library.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Library.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "topic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Library.topic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Library.topic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Library.topic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Library.topic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Library.topic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Library.topic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "topic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Library.topic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Linkage = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Linkage.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Linkage.item",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "item",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Linkage.item.resource",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "source",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "resource",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  List = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "List.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "List.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "List.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "List.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "emptyReason",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "List.emptyReason.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "List.emptyReason.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "empty-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.emptyReason.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "empty-reason",
          SearchParameterType = "token",
          DataType = "string",
          Path = "List.emptyReason",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "emptyReason",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "List.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "List.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "List.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "entry",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "List.entry",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "item",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "List.entry.item",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "item",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "List.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "List.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "List.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "List.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "note",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "List.note",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "notes",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "List.note.text",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Location = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-city",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.city",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "city",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-country",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.country",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "country",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-postalcode",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.postalCode",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "postalCode",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-state",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.address.state",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "state",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "address-use",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Location.address.use",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "use",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Location.name",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operational-status",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "Location.operationalStatus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "operationalStatus",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operational-status",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Location.operationalStatus",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "operationalStatus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operational-status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Location.operationalStatus",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "operationalStatus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operational-status",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Location.operationalStatus",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "operationalStatus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Location.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "partof",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Location.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Location.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Location.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Location.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Location.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "alias",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Location.alias",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Location.alias",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "endpoint",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Location.endpoint",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "endpoint",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Location.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Location.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Location.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Location.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Measure = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Measure.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "Measure.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Measure.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Measure.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Measure.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Measure.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Measure.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Measure.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Measure.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Measure.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Measure.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Measure.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Measure.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Measure.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Measure.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Measure.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Measure.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Measure.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Measure.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Measure.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Measure.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Measure.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Measure.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "library",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Measure.library",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "depends-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Measure.library",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "topic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Measure.topic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Measure.topic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Measure.topic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Measure.topic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Measure.topic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Measure.topic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "topic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Measure.topic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MeasureReport = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "MeasureReport.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MeasureReport.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MeasureReport.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MeasureReport.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MeasureReport.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MeasureReport.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Media = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Media.content.creation",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "creation",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "operator",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.operator",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "operator",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Media.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "bodySite",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Media.bodySite.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "site",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Media.bodySite.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "site",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.bodySite.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "site",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Media.bodySite.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "site",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.bodySite.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "site",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Media.bodySite",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "subtype",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Media.subtype.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Media.subtype.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "subtype",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.subtype.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "subtype",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Media.subtype",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subtype",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Media.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "view",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Media.view.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Media.view.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "view",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.view.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "view",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Media.view",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "view",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Media.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Media.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Media.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Media.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Media.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Medication = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "container",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "package",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.package.container.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.package.container.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.package.container.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "container",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.package.container",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "package",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "form",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.form.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Medication.form.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Medication.form.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Medication.form.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "form",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.form.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "form",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Medication.form",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "form",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "manufacturer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Medication.manufacturer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "manufacturer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "over-the-counter",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Medication.isOverTheCounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "isOverTheCounter",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Medication.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "ingredient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.ingredient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ingredient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Medication.ingredient.item.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "item",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Medication.ingredient.item.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ingredient-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Medication.ingredient.item.CodeableConcept.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ingredient-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Medication.ingredient.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ingredient-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Medication.ingredient.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "ingredient-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Medication.ingredient.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ingredient-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.ingredient.item.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "content",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "package",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Medication.package.content",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "package-item",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Medication.package.content.item.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "item",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Medication.package.content.item.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "package-item-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Medication.package.content.item.CodeableConcept.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "package-item-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Medication.package.content.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "package-item-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Medication.package.content.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "package-item-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Medication.package.content.item.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "package-item-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Medication.package.content.item.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "item",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationAdministration = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationAdministration.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "not-given",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "MedicationAdministration.notGiven",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "notGiven",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "prescription",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationAdministration.prescription",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "prescription",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationAdministration.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.device",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "device",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationAdministration.device",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationAdministration.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationAdministration.performer.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reasonCode",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.reasonCode",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "MedicationAdministration.reasonCode.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-given",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "MedicationAdministration.reasonCode.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-given",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "MedicationAdministration.reasonCode.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-given",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "MedicationAdministration.reasonCode.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-given",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "MedicationAdministration.reasonCode.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason-given",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.reasonCode",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "reasonNotGiven",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationAdministration.reasonNotGiven",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "MedicationAdministration.reasonNotGiven.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "MedicationAdministration.reasonNotGiven.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "MedicationAdministration.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "MedicationAdministration.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "reason-not-given",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "MedicationAdministration.reasonNotGiven.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reason-not-given",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationAdministration.reasonNotGiven",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationDispense = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationDispense.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "destination",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationDispense.destination",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "destination",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationDispense.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationDispense.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "whenhandedover",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationDispense.whenHandedOver",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "whenHandedOver",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "whenprepared",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationDispense.whenPrepared",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "whenPrepared",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "authorizingPrescription",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.authorizingPrescription",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "prescription",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.authorizingPrescription",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationDispense.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationDispense.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationDispense.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.performer.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.receiver",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "receiver",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.receiver",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "responsibleParty",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "substitution",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationDispense.substitution.responsibleParty",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "responsibleparty",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationDispense.substitution.responsibleParty",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationRequest.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationRequest.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationRequest.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationRequest.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationRequest.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationRequest.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationRequest.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authoredon",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MedicationRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationRequest.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationRequest.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationRequest.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationRequest.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationRequest.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationRequest.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationRequest.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intended-dispenser",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationRequest.dispenseRequest.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "dispenseRequest",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationRequest.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationRequest.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "dosageInstruction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationRequest.dosageInstruction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "event",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "timing",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "MedicationRequest.dosageInstruction.timing.event",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "date",
                          SearchParameterType = "date",
                          DataType = "dateTime",
                          Path = "MedicationRequest.dosageInstruction.timing.event",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MedicationStatement = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "medication",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.medication.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.medication.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationStatement.medication.CodeableConcept",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "medication",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.medication.Reference",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Reference",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "medication",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MedicationStatement.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "MedicationStatement.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationStatement.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MedicationStatement.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MedicationStatement.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MedicationStatement.informationSource",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "informationSource",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "MedicationStatement.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MedicationStatement.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MedicationStatement.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-of",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MedicationStatement.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MessageDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageDefinition.category",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "category",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "MessageDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "MessageDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "MessageDefinition.event",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "event",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MessageDefinition.event",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageDefinition.event",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageDefinition.event",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "MessageDefinition.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MessageDefinition.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageDefinition.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageDefinition.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "MessageDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "MessageDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "MessageDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "MessageDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "focus",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageDefinition.focus",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "focus",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "MessageDefinition.focus.code",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "MessageDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "MessageDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "MessageDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "MessageDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "MessageDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "MessageDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MessageHeader = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageHeader.response.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "response",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "enterer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.enterer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "enterer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "Coding",
          Path = "MessageHeader.event",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "event",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "code",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "event",
          SearchParameterType = "token",
          DataType = "string",
          Path = "MessageHeader.event",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "display",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "event",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "receiver",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.receiver",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "response-id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "MessageHeader.response.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "response",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "responsible",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.responsible",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "responsible",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sender",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "MessageHeader.sender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sender",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "string",
          DataType = "string",
          Path = "MessageHeader.source.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source-uri",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "MessageHeader.source.endpoint",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "endpoint",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "timestamp",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "MessageHeader.timestamp",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "timestamp",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "destination",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageHeader.destination",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "destination",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "MessageHeader.destination.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "destination-uri",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "MessageHeader.destination.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "endpoint",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MessageHeader.destination.target",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "focus",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "MessageHeader.focus",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "focus",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "MessageHeader.focus",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  MetadataResource = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  NamingSystem = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "NamingSystem.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "NamingSystem.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NamingSystem.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "replaced-by",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NamingSystem.replacedBy",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "replacedBy",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "responsible",
          SearchParameterType = "string",
          DataType = "string",
          Path = "NamingSystem.responsible",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "responsible",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NamingSystem.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NamingSystem.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NamingSystem.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NamingSystem.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.contact",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "contact",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "NamingSystem.contact.name",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "name",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.contact",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "telecom",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NamingSystem.contact.telecom",
                  Value = { }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NamingSystem.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NamingSystem.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NamingSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NamingSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NamingSystem.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NamingSystem.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "uniqueId",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NamingSystem.uniqueId",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "id-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NamingSystem.uniqueId.type",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "Period",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "period",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v,
                  FieldName = "start"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "start",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "period",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "NamingSystem.uniqueId.period",
                  Operator = v,
                  FieldName = "end"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "end",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "period",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "NamingSystem.uniqueId.value",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  NutritionOrder = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "additiveType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "enteralFormula",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.enteralFormula.additiveType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "additive",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.enteralFormula.additiveType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "additive",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NutritionOrder.enteralFormula.additiveType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "additiveType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "enteralFormula",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "datetime",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "NutritionOrder.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "baseFormulaType",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "enteralFormula",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "formula",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.enteralFormula.baseFormulaType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "formula",
          SearchParameterType = "token",
          DataType = "string",
          Path = "NutritionOrder.enteralFormula.baseFormulaType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "baseFormulaType",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "enteralFormula",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "NutritionOrder.orderer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "orderer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "NutritionOrder.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "NutritionOrder.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "oralDiet",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.oralDiet.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "NutritionOrder.oralDiet.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "oraldiet",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NutritionOrder.oralDiet.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "oraldiet",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.oralDiet.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "supplement",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "NutritionOrder.supplement",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "type",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "NutritionOrder.supplement.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "supplement",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "NutritionOrder.supplement.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supplement",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "NutritionOrder.supplement.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Observation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.code.coding",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "combo-code",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "system",
                  Alternates = {
                    [
                      SearchParameterName = "combo-code",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "code",
                  Alternates = {
                    [
                      SearchParameterName = "combo-code",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.code.coding",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-code",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.code",
          Operator = v,
          FieldName = "text",
          Alternates = {
            [
              SearchParameterName = "combo-code",
              SearchParameterType = "token",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-concept",
              SearchParameterType = "token",
              CompositeElement = 0,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-quantity",
              SearchParameterType = "token",
              CompositeElement = 0,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "context",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "CodeableConcept",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "value",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.value.CodeableConcept.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-concept",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "system",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-concept",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "code",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-concept",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "value-concept",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.value.CodeableConcept.coding",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-concept",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-concept",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.value.CodeableConcept",
          Operator = v,
          FieldName = "text",
          Alternates = {
            [
              SearchParameterName = "combo-value-concept",
              SearchParameterType = "token",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-concept",
              SearchParameterType = "token",
              CompositeElement = 1,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "CodeableConcept",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "Quantity",
          Path = "Observation.value.Quantity",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "combo-value-quantity",
              SearchParameterType = "quantity",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-quantity",
              SearchParameterType = "quantity",
              CompositeElement = 1,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Quantity",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "decimal",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "number",
          Alternates = {
            [
              SearchParameterName = "combo-value-quantity",
              SearchParameterType = "quantity",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-quantity",
              SearchParameterType = "quantity",
              CompositeElement = 1,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "uri",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "system",
          Alternates = {
            [
              SearchParameterName = "combo-value-quantity",
              SearchParameterType = "quantity",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-quantity",
              SearchParameterType = "quantity",
              CompositeElement = 1,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-quantity",
          SearchParameterType = "quantity",
          DataType = "code",
          Path = "Observation.value.Quantity",
          Operator = v,
          FieldName = "code",
          Alternates = {
            [
              SearchParameterName = "combo-value-quantity",
              SearchParameterType = "quantity",
              UnionElement = 0,
              UnionElementCount = 2
            ],
            [
              SearchParameterName = "combo-code-value-quantity",
              SearchParameterType = "quantity",
              CompositeElement = 1,
              CompositeElementCount = 2,
              CompositeBasePath = "",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Quantity",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "dataAbsentReason",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.dataAbsentReason.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "combo-data-absent-reason",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "system",
                  Alternates = {
                    [
                      SearchParameterName = "combo-data-absent-reason",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "code",
                  Alternates = {
                    [
                      SearchParameterName = "combo-data-absent-reason",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.dataAbsentReason.coding",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-data-absent-reason",
                      SearchParameterType = "token",
                      UnionElement = 0,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "data-absent-reason",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.dataAbsentReason",
          Operator = v,
          FieldName = "text",
          Alternates = {
            [
              SearchParameterName = "combo-data-absent-reason",
              SearchParameterType = "token",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "dataAbsentReason",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "device",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.device",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "device",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "method",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.method.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Observation.method.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.method.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.method.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.method.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "method",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Observation.method",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "method",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "specimen",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Observation.specimen",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Observation.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.value.dateTime",
          Operator = v,
          UnionElement = 0,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Observation.value.Period",
          Operator = v,
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "Period",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.value.Period",
          Operator = v,
          FieldName = "start",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Observation.value.Period",
          Operator = v,
          FieldName = "end",
          UnionElement = 1,
          UnionElementCount = 2
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "Period",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "value",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "value-string",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Observation.value.string",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "string",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "value",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Observation.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "component",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.component",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "code",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          Alternates = {
                            [
                              SearchParameterName = "combo-code",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "component-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "combo-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "system",
                          Alternates = {
                            [
                              SearchParameterName = "combo-code",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "component-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "combo-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "code",
                          Alternates = {
                            [
                              SearchParameterName = "combo-code",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "component-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "combo-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.code.coding",
                          Operator = v,
                          FieldName = "text",
                          Alternates = {
                            [
                              SearchParameterName = "combo-code",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "component-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "combo-code-value-quantity",
                              SearchParameterType = "token",
                              CompositeElement = 0,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.code",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-code",
                      SearchParameterType = "token",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "component-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "token",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "value",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.value.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          Alternates = {
                            [
                              SearchParameterName = "combo-value-concept",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system",
                          Alternates = {
                            [
                              SearchParameterName = "combo-value-concept",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code",
                          Alternates = {
                            [
                              SearchParameterName = "combo-value-concept",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-value-concept",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.value.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text",
                          Alternates = {
                            [
                              SearchParameterName = "combo-value-concept",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ],
                            [
                              SearchParameterName = "component-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component"
                            ],
                            [
                              SearchParameterName = "combo-code-value-concept",
                              SearchParameterType = "token",
                              CompositeElement = 1,
                              CompositeElementCount = 2,
                              CompositeBasePath = "Observation.component",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-concept",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.value.CodeableConcept",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-concept",
                      SearchParameterType = "token",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-concept",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "Quantity",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-quantity",
                      SearchParameterType = "quantity",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Quantity",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "value",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "decimal",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "number",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-quantity",
                      SearchParameterType = "quantity",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "uri",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "system",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-quantity",
                      SearchParameterType = "quantity",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-value-quantity",
                  SearchParameterType = "quantity",
                  DataType = "code",
                  Path = "Observation.component.value.Quantity",
                  Operator = v,
                  FieldName = "code",
                  Alternates = {
                    [
                      SearchParameterName = "combo-value-quantity",
                      SearchParameterType = "quantity",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ],
                    [
                      SearchParameterName = "component-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component"
                    ],
                    [
                      SearchParameterName = "combo-code-value-quantity",
                      SearchParameterType = "quantity",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.component",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Quantity",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "value",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "dataAbsentReason",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Observation.component.dataAbsentReason.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          Alternates = {
                            [
                              SearchParameterName = "combo-data-absent-reason",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "system",
                          Alternates = {
                            [
                              SearchParameterName = "combo-data-absent-reason",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "code",
                          Alternates = {
                            [
                              SearchParameterName = "combo-data-absent-reason",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "component-data-absent-reason",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Observation.component.dataAbsentReason.coding",
                          Operator = v,
                          FieldName = "text",
                          Alternates = {
                            [
                              SearchParameterName = "combo-data-absent-reason",
                              SearchParameterType = "token",
                              UnionElement = 1,
                              UnionElementCount = 2
                            ]
                          }
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component-data-absent-reason",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.component.dataAbsentReason",
                  Operator = v,
                  FieldName = "text",
                  Alternates = {
                    [
                      SearchParameterName = "combo-data-absent-reason",
                      SearchParameterType = "token",
                      UnionElement = 1,
                      UnionElementCount = 2
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "dataAbsentReason",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Observation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Observation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Observation.performer",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "related",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Observation.related",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-target",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Observation.related.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "related",
                      SearchParameterType = "reference",
                      CompositeElement = 0,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.related"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "related-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Observation.related.type",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "related",
                      SearchParameterType = "token",
                      CompositeElement = 1,
                      CompositeElementCount = 2,
                      CompositeBasePath = "Observation.related"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "type",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  OperationDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "base",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "OperationDefinition.base",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "base",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "OperationDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "OperationDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "instance",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "OperationDefinition.instance",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "instance",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "OperationDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "OperationDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "OperationDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "system",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "OperationDefinition.system",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "OperationDefinition.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "OperationDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "OperationDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OperationDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "OperationDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "OperationDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "OperationDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "OperationDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "OperationDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "OperationDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "parameter",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "OperationDefinition.parameter",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "param-profile",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "OperationDefinition.parameter.profile",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "profile",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  OperationOutcome = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Organization = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Organization.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "phonetic",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Organization.name",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "name",
              SearchParameterType = "string",
              UnionElement = 0,
              UnionElementCount = 2
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "partof",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Organization.partOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Organization.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "alias",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.alias",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "name",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Organization.alias",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "endpoint",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.endpoint",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "endpoint",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Organization.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Organization.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Organization.type",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Organization.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Organization.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Organization.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Organization.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Organization.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Organization.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Parameters = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Patient = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Patient.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "breed",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "animal",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.animal.breed.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Patient.animal.breed.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-breed",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.animal.breed.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "animal-breed",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Patient.animal.breed",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "breed",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "animal",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "species",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "animal",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.animal.species.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Patient.animal.species.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "animal-species",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.animal.species.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "animal-species",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Patient.animal.species",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "species",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "animal",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Patient.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "death-date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Patient.deceased.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "deceased",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Patient.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Patient.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Patient.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "communication",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.communication",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "language",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Patient.communication.language.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Patient.communication.language.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "language",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Patient.communication.language.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "language",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.communication.language",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "language",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "generalPractitioner",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.generalPractitioner",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "general-practitioner",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Patient.generalPractitioner",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Patient.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Patient.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "link",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.link",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "link",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Patient.link.other",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "other",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.name",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "family",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Patient.name.family",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "family",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.name",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "given",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Patient.name.given",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "given",
                          SearchParameterType = "string",
                          DataType = "string",
                          Path = "Patient.name.given",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Patient.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PaymentNotice = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PaymentNotice.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentNotice.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "paymentStatus",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentNotice.paymentStatus.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payment-status",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "PaymentNotice.paymentStatus.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payment-status",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentNotice.paymentStatus.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payment-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "PaymentNotice.paymentStatus.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "payment-status",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentNotice.paymentStatus.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payment-status",
          SearchParameterType = "token",
          DataType = "string",
          Path = "PaymentNotice.paymentStatus",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "paymentStatus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentNotice.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentNotice.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "response",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentNotice.response",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "response",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "statusdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "PaymentNotice.statusDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "statusDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentNotice.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PaymentNotice.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentNotice.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PaymentReconciliation = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "created",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PaymentReconciliation.created",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "created",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "disposition",
          SearchParameterType = "string",
          DataType = "string",
          Path = "PaymentReconciliation.disposition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "disposition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentReconciliation.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "outcome",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentReconciliation.outcome.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "PaymentReconciliation.outcome.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentReconciliation.outcome.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "PaymentReconciliation.outcome.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "outcome",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentReconciliation.outcome.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "outcome",
          SearchParameterType = "token",
          DataType = "string",
          Path = "PaymentReconciliation.outcome",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "outcome",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentReconciliation.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentReconciliation.requestOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PaymentReconciliation.requestProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PaymentReconciliation.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PaymentReconciliation.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Person = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "Person.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Person.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Person.managingOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "managingOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Person.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Person.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Person.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Person.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "link",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.link",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "link",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Person.link.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "patient",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "practitioner",
                      SearchParameterType = "reference"
                    ],
                    [
                      SearchParameterName = "relatedperson",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "target",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.name",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Person.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PlanDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PlanDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "PlanDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "PlanDefinition.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PlanDefinition.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PlanDefinition.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "PlanDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "PlanDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "PlanDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "PlanDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "PlanDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "PlanDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PlanDefinition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PlanDefinition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PlanDefinition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PlanDefinition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PlanDefinition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PlanDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "PlanDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "PlanDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "PlanDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "PlanDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "PlanDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PlanDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "library",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PlanDefinition.library",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "depends-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "PlanDefinition.library",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "topic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PlanDefinition.topic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "PlanDefinition.topic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "PlanDefinition.topic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "PlanDefinition.topic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "PlanDefinition.topic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "PlanDefinition.topic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "topic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PlanDefinition.topic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Practitioner = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Practitioner.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Practitioner.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Practitioner.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "communication",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.communication",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.communication.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Practitioner.communication.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "communication",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Practitioner.communication.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "communication",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.communication",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Practitioner.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Practitioner.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.name",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "family",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "Practitioner.name.family",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "family",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.name",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = List.MatchesAny
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "given",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Practitioner.name.given",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "given",
                          SearchParameterType = "string",
                          DataType = "string",
                          Path = "Practitioner.name.given",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Practitioner.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  PractitionerRole = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "PractitionerRole.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "PractitionerRole.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PractitionerRole.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "PractitionerRole.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PractitionerRole.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "practitioner",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "PractitionerRole.practitioner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "practitioner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.code",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "PractitionerRole.code.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "PractitionerRole.code.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "PractitionerRole.code.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "PractitionerRole.code.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "role",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "PractitionerRole.code.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "role",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PractitionerRole.code",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "endpoint",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.endpoint",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "endpoint",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "PractitionerRole.endpoint",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "healthcareService",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.healthcareService",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "service",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "PractitionerRole.healthcareService",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "PractitionerRole.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "PractitionerRole.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PractitionerRole.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PractitionerRole.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.location",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "location",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "PractitionerRole.location",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specialty",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.specialty",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "PractitionerRole.specialty.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "specialty",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "PractitionerRole.specialty.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "specialty",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "PractitionerRole.specialty.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "specialty",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "PractitionerRole.specialty.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "specialty",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "PractitionerRole.specialty.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "PractitionerRole.specialty",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "PractitionerRole.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Procedure = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Procedure.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Procedure.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "context",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Procedure.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Procedure.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Procedure.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Procedure.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Procedure.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Procedure.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Procedure.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Procedure.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Procedure.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Procedure.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-of",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Procedure.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Procedure.performer",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Procedure.performer.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "actor",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcedureRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ProcedureRequest.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcedureRequest.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ProcedureRequest.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ProcedureRequest.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "context",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ProcedureRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ProcedureRequest.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "performerType",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.performerType.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer-type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ProcedureRequest.performerType.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer-type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcedureRequest.performerType.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer-type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ProcedureRequest.performerType.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.performerType.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer-type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ProcedureRequest.performerType",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performerType",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ProcedureRequest.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcedureRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requisition",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ProcedureRequest.requisition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "requisition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requisition",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ProcedureRequest.requisition",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requisition",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requisition",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ProcedureRequest.requisition",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requisition",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requisition",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ProcedureRequest.requisition",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requisition",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ProcedureRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ProcedureRequest.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.bodySite",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ProcedureRequest.bodySite.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ProcedureRequest.bodySite.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ProcedureRequest.bodySite.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ProcedureRequest.bodySite.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "body-site",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ProcedureRequest.bodySite.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "body-site",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.bodySite",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ProcedureRequest.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcedureRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcedureRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "replaces",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.replaces",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "replaces",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ProcedureRequest.replaces",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "specimen",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcedureRequest.specimen",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specimen",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ProcedureRequest.specimen",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcessRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "action",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ProcessRequest.action",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "action",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessRequest.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessRequest.provider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "provider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcessRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcessRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ProcessResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.organization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "organization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.request",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "request",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.requestOrganization",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestOrganization",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "request-provider",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ProcessResponse.requestProvider",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "requestProvider",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ProcessResponse.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ProcessResponse.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ProcessResponse.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Provenance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "end",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Provenance.period.end",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "location",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Provenance.location",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "location",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "recorded",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Provenance.recorded",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "recorded",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Provenance.period.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.agent",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.agent",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "role",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Provenance.agent.role",
                  Value = {
                    [
                      Kind = "Invocation",
                      Function = [
                        Kind = "Constant",
                        Value = Table.MatchesAnyRows
                      ],
                      Arguments = {
                        [
                          Kind = "FieldAccess",
                          MemberName = "coding",
                          Expression = RowExpression.Row
                        ],
                        [
                          Kind = "RowExpression",
                          Path = "Provenance.agent.role.coding",
                          Value = {
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "Coding",
                                  Path = "Provenance.agent.role.coding",
                                  Operator = v
                                ],
                              Left = RowExpression.Row,
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "uri",
                                  Path = "Provenance.agent.role.coding",
                                  Operator = v,
                                  FieldName = "system"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "system",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "code",
                                  Path = "Provenance.agent.role.coding",
                                  Operator = v,
                                  FieldName = "code"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "code",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ],
                            [
                              Kind = "Binary",
                              CaptureOperator = (v) => [
                                  SearchParameterName = "agent-role",
                                  SearchParameterType = "token",
                                  DataType = "string",
                                  Path = "Provenance.agent.role.coding",
                                  Operator = v,
                                  FieldName = "text"
                                ],
                              Left = [
                                Kind = "FieldAccess",
                                MemberName = "display",
                                Expression = RowExpression.Row
                              ],
                              Right = [
                                Kind = "Constant",
                                CaptureValue = (v) => [ Value = v ]
                              ]
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "agent-role",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Provenance.agent.role",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "entity",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.entity",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Provenance.entity.what.Identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "Identifier",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "what",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Provenance.entity.what.Identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Identifier",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "what",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Provenance.entity.what.Identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Identifier",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "what",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-id",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Provenance.entity.what.Identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "Identifier",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "what",
                      Expression = RowExpression.Row
                    ]
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "entity-ref",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Provenance.entity.what.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "what",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "signature",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.signature",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Provenance.signature.type",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "signature-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Provenance.signature.type",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "signature-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "signature-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "signature-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Provenance.signature.type",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Provenance.target",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "patient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Provenance.target",
                  Operator = v,
                  Alternates = {
                    [
                      SearchParameterName = "target",
                      SearchParameterType = "reference"
                    ]
                  }
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Questionnaire = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Questionnaire.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "Questionnaire.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Questionnaire.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Questionnaire.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Questionnaire.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Questionnaire.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Questionnaire.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Questionnaire.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Questionnaire.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Questionnaire.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Questionnaire.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "item",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Questionnaire.item",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "code",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Questionnaire.item.code",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Questionnaire.item.code",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Questionnaire.item.code",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Questionnaire.item.code",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Questionnaire.item.code",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Questionnaire.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Questionnaire.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Questionnaire.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Questionnaire.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Questionnaire.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Questionnaire.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Questionnaire.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  QuestionnaireResponse = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "QuestionnaireResponse.authored",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authored",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "QuestionnaireResponse.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "QuestionnaireResponse.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "QuestionnaireResponse.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "QuestionnaireResponse.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "questionnaire",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.questionnaire",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "questionnaire",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "source",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "QuestionnaireResponse.source",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "source",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "QuestionnaireResponse.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "QuestionnaireResponse.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "QuestionnaireResponse.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "QuestionnaireResponse.parent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "parent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "QuestionnaireResponse.parent",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ReferralRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ReferralRequest.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ReferralRequest.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored-on",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ReferralRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ReferralRequest.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ReferralRequest.groupIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "groupIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ReferralRequest.groupIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.groupIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.groupIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "groupIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ReferralRequest.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ReferralRequest.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ReferralRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "specialty",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.specialty.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "specialty",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.specialty.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "specialty",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ReferralRequest.specialty",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "specialty",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ReferralRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ReferralRequest.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ReferralRequest.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ReferralRequest.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ReferralRequest.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "recipient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.recipient",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "recipient",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ReferralRequest.recipient",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "replaces",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.replaces",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "replaces",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ReferralRequest.replaces",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "serviceRequested",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ReferralRequest.serviceRequested",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ReferralRequest.serviceRequested.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ReferralRequest.serviceRequested.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ReferralRequest.serviceRequested.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ReferralRequest.serviceRequested.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "service",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ReferralRequest.serviceRequested.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "service",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ReferralRequest.serviceRequested",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  RelatedPerson = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "birthdate",
          SearchParameterType = "date",
          DataType = "date",
          Path = "RelatedPerson.birthDate",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "birthDate",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "gender",
          SearchParameterType = "token",
          DataType = "code",
          Path = "RelatedPerson.gender",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "gender",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "RelatedPerson.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RelatedPerson.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "address",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.address",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-city",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.city",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "city",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-country",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.country",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "country",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-postalcode",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.postalCode",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "postalCode",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-state",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "RelatedPerson.address.state",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "state",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "address-use",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "RelatedPerson.address.use",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "use",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "RelatedPerson.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RelatedPerson.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "name",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.name",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "telecom",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RelatedPerson.telecom",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  RequestGroup = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "author",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RequestGroup.author",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "author",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "RequestGroup.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RequestGroup.context",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "encounter",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "RequestGroup.groupIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "groupIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "RequestGroup.groupIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RequestGroup.groupIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RequestGroup.groupIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "groupIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "RequestGroup.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RequestGroup.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "RequestGroup.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "RequestGroup.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "action",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RequestGroup.action",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "participant",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "RequestGroup.action.participant",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "participant",
                          SearchParameterType = "reference",
                          DataType = "string",
                          Path = "RequestGroup.action.participant",
                          Operator = v
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "reference",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "definition",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RequestGroup.definition",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "definition",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "RequestGroup.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RequestGroup.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "RequestGroup.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "RequestGroup.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RequestGroup.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RequestGroup.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ResearchStudy = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "ResearchStudy.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ResearchStudy.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ResearchStudy.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "principalinvestigator",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ResearchStudy.principalInvestigator",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "principalInvestigator",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "sponsor",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ResearchStudy.sponsor",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "sponsor",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ResearchStudy.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ResearchStudy.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ResearchStudy.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ResearchStudy.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ResearchStudy.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ResearchStudy.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ResearchStudy.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "focus",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.focus",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ResearchStudy.focus.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "focus",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ResearchStudy.focus.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "focus",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ResearchStudy.focus.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "focus",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ResearchStudy.focus.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "focus",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ResearchStudy.focus.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "focus",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.focus",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ResearchStudy.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ResearchStudy.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ResearchStudy.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ResearchStudy.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ResearchStudy.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ResearchStudy.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ResearchStudy.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "keyword",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.keyword",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ResearchStudy.keyword.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "keyword",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ResearchStudy.keyword.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "keyword",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ResearchStudy.keyword.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "keyword",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ResearchStudy.keyword.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "keyword",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ResearchStudy.keyword.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "keyword",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ResearchStudy.keyword",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "partof",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ResearchStudy.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "protocol",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.protocol",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "protocol",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ResearchStudy.protocol",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "site",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ResearchStudy.site",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "site",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "ResearchStudy.site",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ResearchSubject = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "ResearchSubject.period",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "period",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ResearchSubject.period",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ResearchSubject.period",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "period",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "ResearchSubject.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "ResearchSubject.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ResearchSubject.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ResearchSubject.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "individual",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "ResearchSubject.individual",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "patient",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "individual",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ResearchSubject.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  RiskAssessment = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "RiskAssessment.occurrence.dateTime",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateTime",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "occurrence",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "RiskAssessment.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "condition",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.condition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "condition",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "method",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "RiskAssessment.method.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "RiskAssessment.method.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "method",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RiskAssessment.method.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "method",
          SearchParameterType = "token",
          DataType = "string",
          Path = "RiskAssessment.method",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "method",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "performer",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "RiskAssessment.performer",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "performer",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "prediction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "RiskAssessment.prediction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "qualitativeRisk",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "RiskAssessment.prediction.qualitativeRisk.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "risk",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "RiskAssessment.prediction.qualitativeRisk.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "risk",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "RiskAssessment.prediction.qualitativeRisk.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "risk",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "RiskAssessment.prediction.qualitativeRisk.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "risk",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "RiskAssessment.prediction.qualitativeRisk.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "risk",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "RiskAssessment.prediction.qualitativeRisk",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "qualitativeRisk",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Schedule = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "active",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "Schedule.active",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "active",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Schedule.planningHorizon",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "planningHorizon",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Schedule.planningHorizon",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "planningHorizon",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Schedule.planningHorizon",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "planningHorizon",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "actor",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Schedule.actor",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "actor",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Schedule.actor",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Schedule.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Schedule.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "serviceType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Schedule.serviceType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Schedule.serviceType.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Schedule.serviceType.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Schedule.serviceType.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Schedule.serviceType.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Schedule.serviceType.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Schedule.serviceType",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SearchParameter = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.code",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "code",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "SearchParameter.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "derived-from",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "SearchParameter.derivedFrom",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "derivedFrom",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "SearchParameter.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "SearchParameter.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "SearchParameter.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SearchParameter.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "SearchParameter.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SearchParameter.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "base",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SearchParameter.base",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "base",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "SearchParameter.base",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "component",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SearchParameter.component",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "component",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "SearchParameter.component.definition",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "definition",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SearchParameter.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "SearchParameter.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "SearchParameter.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "SearchParameter.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "SearchParameter.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "SearchParameter.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "SearchParameter.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "target",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SearchParameter.target",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "target",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "SearchParameter.target",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Sequence = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "chromosome",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "referenceSeq",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Sequence.referenceSeq.chromosome.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "chromosome",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Sequence.referenceSeq.chromosome.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "chromosome",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Sequence.referenceSeq.chromosome.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "chromosome",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Sequence.referenceSeq.chromosome.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "chromosome",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Sequence.referenceSeq.chromosome.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "chromosome",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Sequence.referenceSeq.chromosome",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "chromosome",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "referenceSeq",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "end",
          SearchParameterType = "number",
          DataType = "integer",
          Path = "Sequence.referenceSeq.windowEnd",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "windowEnd",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "referenceSeq",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Sequence.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "number",
          DataType = "integer",
          Path = "Sequence.referenceSeq.windowStart",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "windowStart",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "referenceSeq",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Sequence.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Sequence.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Sequence.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Sequence.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Sequence.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Sequence.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ServiceDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ServiceDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ServiceDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "ServiceDefinition.effectivePeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "effectivePeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ServiceDefinition.effectivePeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "effective",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ServiceDefinition.effectivePeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "effectivePeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ServiceDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ServiceDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ServiceDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ServiceDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ServiceDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ServiceDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ServiceDefinition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ServiceDefinition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ServiceDefinition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ServiceDefinition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ServiceDefinition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ServiceDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ServiceDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ServiceDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ServiceDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ServiceDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ServiceDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ServiceDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "topic",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ServiceDefinition.topic",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ServiceDefinition.topic.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ServiceDefinition.topic.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ServiceDefinition.topic.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ServiceDefinition.topic.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "topic",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ServiceDefinition.topic.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "topic",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ServiceDefinition.topic",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Slot = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "schedule",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Slot.schedule",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "schedule",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "start",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Slot.start",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Slot.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Slot.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Slot.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "serviceType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Slot.serviceType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Slot.serviceType.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "slot-type",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Slot.serviceType.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "slot-type",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Slot.serviceType.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "slot-type",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Slot.serviceType.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "slot-type",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Slot.serviceType.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "slot-type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Slot.serviceType",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Specimen = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Specimen.accessionIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "accessionIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accessionIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "accessionIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "accession",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.accessionIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "accessionIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "bodySite",
            Expression = [
              Kind = "FieldAccess",
              MemberName = "collection",
              Expression = RowExpression.Row
            ]
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.collection.bodySite.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "bodysite",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.collection.bodySite.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "bodysite",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.collection.bodySite",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "bodySite",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "collector",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Specimen.collection.collector",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "collector",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "collection",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Specimen.subject",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "subject",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Specimen.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "type",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.type.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Specimen.type.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "type",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.type.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Specimen.type",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.container",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "type",
                    Expression = RowExpression.Row
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Specimen.container.type.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Specimen.container.type.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.type.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.container.type",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "container",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.container",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Specimen.container.identifier",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "Identifier",
                          Path = "Specimen.container.identifier",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "value",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "container-id",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Specimen.container.identifier",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "text",
                        Expression = [
                          Kind = "FieldAccess",
                          MemberName = "type",
                          Expression = RowExpression.Row
                        ]
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Specimen.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Specimen.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "parent",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Specimen.parent",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "parent",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Specimen.parent",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  StructureDefinition = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "abstract",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "StructureDefinition.abstract",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "abstract",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "base",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "StructureDefinition.baseDefinition",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "baseDefinition",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context-type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.contextType",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "contextType",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "StructureDefinition.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "derivation",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.derivation",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "derivation",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "StructureDefinition.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "experimental",
          SearchParameterType = "token",
          DataType = "boolean",
          Path = "StructureDefinition.experimental",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "experimental",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "kind",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.kind",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "kind",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureDefinition.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureDefinition.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "StructureDefinition.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "StructureDefinition.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.context",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "ext-context",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "StructureDefinition.context",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "differential",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.differential.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "base-path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.differential.element.base.path",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "base",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.differential.element.path",
                  Operator = v,
                  UnionElement = 1,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "StructureDefinition.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "StructureDefinition.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "StructureDefinition.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "StructureDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "StructureDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "StructureDefinition.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "keyword",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.keyword",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "keyword",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "StructureDefinition.keyword",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "keyword",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "StructureDefinition.keyword",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "keyword",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "StructureDefinition.keyword",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "keyword",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.keyword",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "element",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "snapshot",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "StructureDefinition.snapshot.element",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "base-path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.snapshot.element.base.path",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "base",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "path",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureDefinition.snapshot.element.path",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "path",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  StructureMap = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "StructureMap.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "StructureMap.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureMap.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureMap.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "StructureMap.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "StructureMap.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "StructureMap.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "StructureMap.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureMap.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "StructureMap.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "StructureMap.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureMap.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureMap.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "StructureMap.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "StructureMap.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "StructureMap.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "StructureMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "StructureMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "StructureMap.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "StructureMap.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Subscription = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "criteria",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Subscription.criteria",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "criteria",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "payload",
          SearchParameterType = "string",
          DataType = "string",
          Path = "Subscription.channel.payload",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "payload",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Subscription.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "type",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Subscription.channel.type",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "type",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "Subscription.channel.endpoint",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "endpoint",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "channel",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "contact",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Subscription.contact",
          Value = { }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Subscription.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "add-tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Subscription.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "add-tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "add-tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "add-tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Subscription.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Substance = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Substance.code.coding",
                  Operator = v,
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "system",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "code",
                  UnionElement = 0,
                  UnionElementCount = 2
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Substance.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Substance.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.category",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Substance.category.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Substance.category.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "category",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Substance.category.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.category",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Substance.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "ingredient",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.ingredient",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "CodeableConcept",
                    Expression = [
                      Kind = "FieldAccess",
                      MemberName = "substance",
                      Expression = RowExpression.Row
                    ]
                  ]
                ],
                [
                  Kind = "RowExpression",
                  Path = "Substance.ingredient.substance.CodeableConcept.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Substance.ingredient.substance.CodeableConcept.coding",
                          Operator = v,
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Substance.ingredient.substance.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "system",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Substance.ingredient.substance.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "code",
                          UnionElement = 1,
                          UnionElementCount = 2
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "code",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Substance.ingredient.substance.CodeableConcept.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.ingredient.substance.CodeableConcept",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "CodeableConcept",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "substance",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "substance-reference",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Substance.ingredient.substance.Reference",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "Reference",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "substance",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "instance",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Substance.instance",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Substance.instance.identifier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "identifier",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "identifier",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "container-identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Substance.instance.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = [
                    Kind = "FieldAccess",
                    MemberName = "identifier",
                    Expression = RowExpression.Row
                  ]
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "expiry",
                  SearchParameterType = "date",
                  DataType = "dateTime",
                  Path = "Substance.instance.expiry",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "expiry",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "Quantity",
                  Path = "Substance.instance.quantity",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "quantity",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "decimal",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "number"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "uri",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "quantity",
                  SearchParameterType = "quantity",
                  DataType = "code",
                  Path = "Substance.instance.quantity",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "quantity",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SupplyDelivery = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "SupplyDelivery.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyDelivery.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyDelivery.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SupplyDelivery.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "supplier",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyDelivery.supplier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "supplier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "receiver",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyDelivery.receiver",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "receiver",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "SupplyDelivery.receiver",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  SupplyRequest = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "SupplyRequest.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "SupplyRequest.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "category",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyRequest.category.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "SupplyRequest.category.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "SupplyRequest.category.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "SupplyRequest.category.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "category",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "SupplyRequest.category.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "category",
          SearchParameterType = "token",
          DataType = "string",
          Path = "SupplyRequest.category",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "category",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "SupplyRequest.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "SupplyRequest.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "supplier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "SupplyRequest.supplier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "supplier",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "SupplyRequest.supplier",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  Task = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "authored-on",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Task.authoredOn",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "authoredOn",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "businessStatus",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Task.businessStatus.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "business-status",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Task.businessStatus.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "business-status",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Task.businessStatus.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "business-status",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Task.businessStatus.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "business-status",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Task.businessStatus.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "business-status",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Task.businessStatus",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "businessStatus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "coding",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "code",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Task.code.coding",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Task.code.coding",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Task.code.coding",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Task.code.coding",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "code",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Task.code.coding",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "code",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Task.code",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "code",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "context",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.context",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "context",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "focus",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.focus",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "focus",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "Task.groupIdentifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "groupIdentifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "Task.groupIdentifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Task.groupIdentifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "groupIdentifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "group-identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "Task.groupIdentifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "groupIdentifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "intent",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Task.intent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "intent",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "modified",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Task.lastModified",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastModified",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "organization",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.requester.onBehalfOf",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "onBehalfOf",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "owner",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.owner",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "owner",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.for",
          Operator = v,
          Alternates = {
            [
              SearchParameterName = "subject",
              SearchParameterType = "reference"
            ]
          }
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "for",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "Period",
          Path = "Task.executionPeriod",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "executionPeriod",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Task.executionPeriod",
          Operator = v,
          FieldName = "start"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "start",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "executionPeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "period",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "Task.executionPeriod",
          Operator = v,
          FieldName = "end"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "end",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "executionPeriod",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "priority",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Task.priority",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "priority",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "requester",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "Task.requester.agent",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "agent",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "requester",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "Task.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "basedOn",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Task.basedOn",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "based-on",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Task.basedOn",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Task.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "Task.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Task.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Task.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Task.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "partOf",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Task.partOf",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "part-of",
                  SearchParameterType = "reference",
                  DataType = "string",
                  Path = "Task.partOf",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "reference",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "performerType",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "Task.performerType",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "Task.performerType.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "Task.performerType.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "Task.performerType.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "Task.performerType.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "performer",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "Task.performerType.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "performer",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Task.performerType",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  TestReport = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "TestReport.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "TestReport.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestReport.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestReport.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "issued",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "TestReport.issued",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "issued",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "result",
          SearchParameterType = "token",
          DataType = "code",
          Path = "TestReport.result",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "result",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "tester",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestReport.tester",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "tester",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "testscript",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "TestReport.testScript",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "testScript",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "participant",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "TestReport.participant",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "participant",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "TestReport.participant.uri",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "uri",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  TestScript = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "TestScript.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "TestScript.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "Identifier",
          Path = "TestScript.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "uri",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "system"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "system",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "code"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "value",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "identifier",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestScript.identifier",
          Operator = v,
          FieldName = "text"
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "text",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "type",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "identifier",
            Expression = RowExpression.Row
          ]
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestScript.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestScript.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "TestScript.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "TestScript.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "TestScript.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "TestScript.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "TestScript.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "TestScript.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "TestScript.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "TestScript.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "TestScript.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "TestScript.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "TestScript.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "capability",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "metadata",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "TestScript.metadata.capability",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "testscript-capability",
                  SearchParameterType = "string",
                  DataType = "string",
                  Path = "TestScript.metadata.capability.description",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "description",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  ValueSet = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "date",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "ValueSet.date",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "date",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "description",
          SearchParameterType = "string",
          DataType = "markdown",
          Path = "ValueSet.description",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "description",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "expansion",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ValueSet.expansion.identifier",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "identifier",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "expansion",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "name",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.name",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "name",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "publisher",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.publisher",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "publisher",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "status",
          SearchParameterType = "token",
          DataType = "code",
          Path = "ValueSet.status",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "status",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "title",
          SearchParameterType = "string",
          DataType = "string",
          Path = "ValueSet.title",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "title",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "url",
          SearchParameterType = "uri",
          DataType = "uri",
          Path = "ValueSet.url",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "url",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "version",
          SearchParameterType = "token",
          DataType = "string",
          Path = "ValueSet.version",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "version",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "include",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "compose",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.compose.include",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "reference",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "ValueSet.compose.include.system",
                  Operator = v
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "ValueSet.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "ValueSet.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ValueSet.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ValueSet.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "jurisdiction",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "ValueSet.jurisdiction",
          Value = {
            [
              Kind = "Invocation",
              Function = [
                Kind = "Constant",
                Value = Table.MatchesAnyRows
              ],
              Arguments = {
                [
                  Kind = "FieldAccess",
                  MemberName = "coding",
                  Expression = RowExpression.Row
                ],
                [
                  Kind = "RowExpression",
                  Path = "ValueSet.jurisdiction.coding",
                  Value = {
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "Coding",
                          Path = "ValueSet.jurisdiction.coding",
                          Operator = v
                        ],
                      Left = RowExpression.Row,
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "uri",
                          Path = "ValueSet.jurisdiction.coding",
                          Operator = v,
                          FieldName = "system"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "system",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "code",
                          Path = "ValueSet.jurisdiction.coding",
                          Operator = v,
                          FieldName = "code"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "code",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ],
                    [
                      Kind = "Binary",
                      CaptureOperator = (v) => [
                          SearchParameterName = "jurisdiction",
                          SearchParameterType = "token",
                          DataType = "string",
                          Path = "ValueSet.jurisdiction.coding",
                          Operator = v,
                          FieldName = "text"
                        ],
                      Left = [
                        Kind = "FieldAccess",
                        MemberName = "display",
                        Expression = RowExpression.Row
                      ],
                      Right = [
                        Kind = "Constant",
                        CaptureValue = (v) => [ Value = v ]
                      ]
                    ]
                  }
                ]
              }
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "jurisdiction",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "ValueSet.jurisdiction",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  },
  VisionPrescription = {
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_id",
          SearchParameterType = "token",
          DataType = "id",
          Path = "Resource.id",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "id",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "_lastUpdated",
          SearchParameterType = "date",
          DataType = "instant",
          Path = "Resource.meta.lastUpdated",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "lastUpdated",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "meta",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "patient",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.patient",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "patient",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "encounter",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.encounter",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "encounter",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "datewritten",
          SearchParameterType = "date",
          DataType = "dateTime",
          Path = "VisionPrescription.dateWritten",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "dateWritten",
        Expression = RowExpression.Row
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Binary",
      CaptureOperator = (v) => [
          SearchParameterName = "prescriber",
          SearchParameterType = "reference",
          DataType = "string",
          Path = "VisionPrescription.prescriber",
          Operator = v
        ],
      Left = [
        Kind = "FieldAccess",
        MemberName = "reference",
        Expression = [
          Kind = "FieldAccess",
          MemberName = "prescriber",
          Expression = RowExpression.Row
        ]
      ],
      Right = [
        Kind = "Constant",
        CaptureValue = (v) => [ Value = v ]
      ]
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = List.MatchesAny
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "profile",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.profile",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_profile",
                  SearchParameterType = "uri",
                  DataType = "uri",
                  Path = "Resource.meta.profile",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "security",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.security",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.security",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_security",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.security",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "tag",
          Expression = [
            Kind = "FieldAccess",
            MemberName = "meta",
            Expression = RowExpression.Row
          ]
        ],
        [
          Kind = "RowExpression",
          Path = "Resource.meta.tag",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "Coding",
                  Path = "Resource.meta.tag",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "code",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "code",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "_tag",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "Resource.meta.tag",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "display",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ],
    [
      Kind = "Invocation",
      Function = [
        Kind = "Constant",
        Value = Table.MatchesAnyRows
      ],
      Arguments = {
        [
          Kind = "FieldAccess",
          MemberName = "identifier",
          Expression = RowExpression.Row
        ],
        [
          Kind = "RowExpression",
          Path = "VisionPrescription.identifier",
          Value = {
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "Identifier",
                  Path = "VisionPrescription.identifier",
                  Operator = v
                ],
              Left = RowExpression.Row,
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = if (v = null) then null else ... ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "uri",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "system"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "system",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "code"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "value",
                Expression = RowExpression.Row
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ],
            [
              Kind = "Binary",
              CaptureOperator = (v) => [
                  SearchParameterName = "identifier",
                  SearchParameterType = "token",
                  DataType = "string",
                  Path = "VisionPrescription.identifier",
                  Operator = v,
                  FieldName = "text"
                ],
              Left = [
                Kind = "FieldAccess",
                MemberName = "text",
                Expression = [
                  Kind = "FieldAccess",
                  MemberName = "type",
                  Expression = RowExpression.Row
                ]
              ],
              Right = [
                Kind = "Constant",
                CaptureValue = (v) => [ Value = v ]
              ]
            ]
          }
        ]
      }
    ]
  }
in
  #table(
    type table [
      ResourceTypeName = text,
      Patterns = { record }
    ],
    {
      { "Account", Account },
      { "ActivityDefinition", ActivityDefinition },
      { "AdverseEvent", AdverseEvent },
      { "AllergyIntolerance", AllergyIntolerance },
      { "Appointment", Appointment },
      { "AppointmentResponse", AppointmentResponse },
      { "AuditEvent", AuditEvent },
      { "Basic", Basic },
      { "Binary", Binary },
      { "BodySite", BodySite },
      { "Bundle", Bundle },
      { "CapabilityStatement", CapabilityStatement },
      { "CarePlan", CarePlan },
      { "CareTeam", CareTeam },
      { "ChargeItem", ChargeItem },
      { "Claim", Claim },
      { "ClaimResponse", ClaimResponse },
      { "ClinicalImpression", ClinicalImpression },
      { "CodeSystem", CodeSystem },
      { "Communication", Communication },
      { "CommunicationRequest", CommunicationRequest },
      { "CompartmentDefinition", CompartmentDefinition },
      { "Composition", Composition },
      { "ConceptMap", ConceptMap },
      { "Condition", Condition },
      { "Consent", Consent },
      { "Contract", Contract },
      { "Coverage", Coverage },
      { "DataElement", DataElement },
      { "DetectedIssue", DetectedIssue },
      { "Device", Device },
      { "DeviceComponent", DeviceComponent },
      { "DeviceMetric", DeviceMetric },
      { "DeviceRequest", DeviceRequest },
      { "DeviceUseStatement", DeviceUseStatement },
      { "DiagnosticReport", DiagnosticReport },
      { "DocumentManifest", DocumentManifest },
      { "DocumentReference", DocumentReference },
      { "EligibilityRequest", EligibilityRequest },
      { "EligibilityResponse", EligibilityResponse },
      { "Encounter", Encounter },
      { "Endpoint", Endpoint },
      { "EnrollmentRequest", EnrollmentRequest },
      { "EnrollmentResponse", EnrollmentResponse },
      { "EpisodeOfCare", EpisodeOfCare },
      { "ExpansionProfile", ExpansionProfile },
      { "ExplanationOfBenefit", ExplanationOfBenefit },
      { "FamilyMemberHistory", FamilyMemberHistory },
      { "Flag", Flag },
      { "Goal", Goal },
      { "GraphDefinition", GraphDefinition },
      { "Group", Group },
      { "GuidanceResponse", GuidanceResponse },
      { "HealthcareService", HealthcareService },
      { "ImagingManifest", ImagingManifest },
      { "ImagingStudy", ImagingStudy },
      { "Immunization", Immunization },
      { "ImmunizationRecommendation", ImmunizationRecommendation },
      { "ImplementationGuide", ImplementationGuide },
      { "Library", Library },
      { "Linkage", Linkage },
      { "List", List },
      { "Location", Location },
      { "Measure", Measure },
      { "MeasureReport", MeasureReport },
      { "Media", Media },
      { "Medication", Medication },
      { "MedicationAdministration", MedicationAdministration },
      { "MedicationDispense", MedicationDispense },
      { "MedicationRequest", MedicationRequest },
      { "MedicationStatement", MedicationStatement },
      { "MessageDefinition", MessageDefinition },
      { "MessageHeader", MessageHeader },
      { "MetadataResource", MetadataResource },
      { "NamingSystem", NamingSystem },
      { "NutritionOrder", NutritionOrder },
      { "Observation", Observation },
      { "OperationDefinition", OperationDefinition },
      { "OperationOutcome", OperationOutcome },
      { "Organization", Organization },
      { "Parameters", Parameters },
      { "Patient", Patient },
      { "PaymentNotice", PaymentNotice },
      { "PaymentReconciliation", PaymentReconciliation },
      { "Person", Person },
      { "PlanDefinition", PlanDefinition },
      { "Practitioner", Practitioner },
      { "PractitionerRole", PractitionerRole },
      { "Procedure", Procedure },
      { "ProcedureRequest", ProcedureRequest },
      { "ProcessRequest", ProcessRequest },
      { "ProcessResponse", ProcessResponse },
      { "Provenance", Provenance },
      { "Questionnaire", Questionnaire },
      { "QuestionnaireResponse", QuestionnaireResponse },
      { "ReferralRequest", ReferralRequest },
      { "RelatedPerson", RelatedPerson },
      { "RequestGroup", RequestGroup },
      { "ResearchStudy", ResearchStudy },
      { "ResearchSubject", ResearchSubject },
      { "RiskAssessment", RiskAssessment },
      { "Schedule", Schedule },
      { "SearchParameter", SearchParameter },
      { "Sequence", Sequence },
      { "ServiceDefinition", ServiceDefinition },
      { "Slot", Slot },
      { "Specimen", Specimen },
      { "StructureDefinition", StructureDefinition },
      { "StructureMap", StructureMap },
      { "Subscription", Subscription },
      { "Substance", Substance },
      { "SupplyDelivery", SupplyDelivery },
      { "SupplyRequest", SupplyRequest },
      { "Task", Task },
      { "TestReport", TestReport },
      { "TestScript", TestScript },
      { "ValueSet", ValueSet },
      { "VisionPrescription", VisionPrescription }
    })
