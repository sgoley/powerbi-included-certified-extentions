<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute name="errorCode" type="xsd:string" msdata:Ordinal="5" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonHelp" errorCode="001" xml:space="preserve">
    <value>从湖屋导入数据</value>
  </data>
  <data name="ButtonTitle" errorCode="002" xml:space="preserve">
    <value>湖屋</value>
  </data>
  <data name="lakehouse.caption" errorCode="003" xml:space="preserve">
    <value>从湖屋导入数据</value>
  </data>
  <data name="lakehouse.longDescription" errorCode="004" xml:space="preserve">
    <value>连接到你有权访问的所有湖屋，并选择要使用的实体。</value>
  </data>
  <data name="DataSourceLabel" errorCode="005" xml:space="preserve">
    <value>湖屋</value>
  </data>
  <data name="lakehouse.description" errorCode="006" xml:space="preserve">
    <value>从湖屋导入数据</value>
  </data>
  <data name="Workspaces" errorCode="007" xml:space="preserve">
    <value>工作区</value>
  </data>
  <data name="WorkspaceId" errorCode="008" xml:space="preserve">
    <value>WorkspaceId</value>
  </data>
  <data name="LakeHouseArtifactId" errorCode="009" xml:space="preserve">
    <value>LakehouseArtifactId</value>
  </data>
  <data name="LakeHouses" errorCode="010" xml:space="preserve">
    <value>湖屋</value>
  </data>
  <data name="Files" errorCode="011" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="InvalidOptionsKey" errorCode="012" xml:space="preserve">
    <value>‘#{0}’非有效选项。有效选项为: ‘#{1}’</value>
  </data>
  <data name="InvalidOptionsValue" errorCode="013" xml:space="preserve">
    <value>此函数不支持值为“#{1}”的选项“#{0}”。</value>
  </data>
  <data name="DeltaModuleNotSupported" errorCode="014" xml:space="preserve">
    <value>无法加载此数据，因为它是以 delta 格式存储的</value>
  </data>
  <data name="MultiTableInsertNotSupported" errorCode="015" xml:space="preserve">
    <value>湖屋连接器不支持多个表插入</value>
  </data>
  <data name="MultiTableDeleteInVersionNotSupported" errorCode="016" xml:space="preserve">
    <value>湖屋连接器不支持版本中的多个表删除</value>
  </data>
  <data name="MultiTableInsertInVersionNotSupported" errorCode="017" xml:space="preserve">
    <value>湖屋连接器不支持在版本中插入多个表</value>
  </data>
  <data name="MultipleVersionsWithSameGuid" errorCode="018" xml:space="preserve">
    <value>具有相同 guid 或 guid 的多个版本与选择器函数“#{0}”不匹配，无法处理此操作!</value>
  </data>
  <data name="InvalidTableName" errorCode="019" xml:space="preserve">
    <value>表只能包含大写或小写字母、数字或下划线字符。</value>
  </data>
  <data name="CannotDeletePublishedVersion" errorCode="020" xml:space="preserve">
    <value>无法删除已发布的版本。</value>
  </data>
  <data name="VersionedLakehouseTableInsertError" errorCode="021" xml:space="preserve">
    <value>在版本中创建湖屋表时出错。</value>
  </data>
  <data name="VersionedLakehouseDeleteExistingTableError" errorCode="022" xml:space="preserve">
    <value>删除版本中的现有湖屋表时出错。</value>
  </data>
  <data name="LakehouseOldDfeVersionCommitError" errorCode="023" xml:space="preserve">
    <value>计算版本时出错。</value>
  </data>
  <data name="VersionedLakehouseTableDeleteError" errorCode="024" xml:space="preserve">
    <value>删除版本中的表数据时出错。</value>
  </data>
  <data name="LakehouseVersionDeleteError" errorCode="025" xml:space="preserve">
    <value>删除版本时出错。</value>
  </data>
  <data name="LakehouseVersionCommitError" errorCode="026" xml:space="preserve">
    <value>计算版本时出错。</value>
  </data>
  <data name="LakehouseVersionInsertError" errorCode="027" xml:space="preserve">
    <value>插入版本时出错。</value>
  </data>
  <data name="LakehouseNonVersionedDeleteError" errorCode="028" xml:space="preserve">
    <value>无法删除行。</value>
  </data>
  <data name="LakehouseNonVersionedInsertError" errorCode="029" xml:space="preserve">
    <value>无法插入表。</value>
  </data>
  <data name="VersionedLakehouseTableReplaceError" errorCode="030" xml:space="preserve">
    <value>将表的内容替换为版本中的新数据时出错: #{0}。</value>
  </data>
  <data name="VersionedLakehouseTableCreateError" errorCode="031" xml:space="preserve">
    <value>在版本中创建湖屋表时出错</value>
  </data>
  <data name="MetadataRefreshError" errorCode="032" xml:space="preserve">
    <value>无法刷新元数据: #{0}，状态#{1}</value>
  </data>
  <data name="TraceMessageWithDetails" errorCode="033" xml:space="preserve">
    <value>#{0}，InnerException: #{1}</value>
  </data>
  <data name="DownstreamServiceCallFailure" errorCode="034" xml:space="preserve">
    <value>对 URL“#{0}”的下游服务调用失败，状态代码为 #{1}。</value>
  </data>
  <data name="DownstreamServiceCallFailureWithErrorCode" errorCode="035" xml:space="preserve">
    <value>对 URL "#{0}" 的下游服务调用失败，状态代码为 #{1}。错误代码: #{2}</value>
  </data>
  <data name="FinalErrorMessageWithDetails" errorCode="036" xml:space="preserve">
    <value>#{0}，基本错误: #{1}</value>
  </data>
  <data name="ErrorParsingJsonInHttpResponse" errorCode="037" xml:space="preserve">
    <value>遇到来自 Web 服务的异常分析错误响应“#{0}”。</value>
  </data>
  <data name="MetadataRefreshErrorWithDetail" errorCode="038" xml:space="preserve">
    <value>由于元数据刷新失败，无法在 Lakehouse SQL 目录上创建表，Lakehouse ID：#{0} 和 Batch ID：#{1} 基础错误 #{2}</value>
  </data>
  <data name="DownstreamServiceCallError" errorCode="039" xml:space="preserve">
    <value>对 URL "#{0}" 的下游服务调用失败。错误代码: "#{1}"，错误消息:“#{2}”。</value>
  </data>
  <data name="TableCreationFailureError" errorCode="040" xml:space="preserve">
    <value>无法创建表。基础错误:“#{0}”</value>
  </data>
  <data name="MetadataRefreshParseResponseError" errorCode="041" xml:space="preserve">
    <value>来自元数据同步服务的响应无效，湖屋 ID: #{0}，批次 ID: #{1}。基础错误: "#{2}"。</value>
  </data>
  <data name="StagingLakehouseInInvalidState" errorCode="042" xml:space="preserve">
    <value>暂存湖屋配置不正确。湖屋 ID: #{0}。请使用此错误报告创建支持票证。请参阅 aka.ms/fabricstaginglakehousefix</value>
  </data>
  <data name="MetadataRefreshUnableToSyncTable" errorCode="043" xml:space="preserve">
    <value>在最大重试次数后，仍无法在湖屋 SQL 目录上创建表，湖屋 ID: #{0}，批次 ID: #{1}。</value>
  </data>
  <data name="MetadataRefreshNothingInProgress" errorCode="044" xml:space="preserve">
    <value>在最大重试次数后，仍无法在湖屋 SQL 目录上创建表，因为没有任何正在进行的操作，湖屋 ID: #{0}，TableName: #{1}。</value>
  </data>
  <data name="MetadataRefreshBatchError" errorCode="045" xml:space="preserve">
    <value>由于元数据刷新失败，无法在湖屋 SQL 目录上创建表，湖屋 ID: #{0}，批次 ID: #{1}。基础错误代码: "#{2}"，错误: #{3}</value>
  </data>
  <data name="ArtifactInInvalidState" errorCode="046" xml:space="preserve">
    <value>ID 为 #{2} 的 #{0} 工件 #{1} 处于无效状态。状态: #{3}，状态 #{4}。</value>
  </data>
  <data name="NoSqlEndPoint" errorCode="047" xml:space="preserve">
    <value>找不到 SQL 终结点</value>
  </data>
</root>