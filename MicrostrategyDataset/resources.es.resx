<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiUrl" xml:space="preserve">
    <value>URL de API de REST de MicroStrategy</value>
  </data>
  <data name="ApiUrlDesc" xml:space="preserve">
    <value>Introduzca una URL de entorno válida (por defecto, se usa la autenticación de Library): https://.../MicroStrategyLibrary. Para la autenticación de OIDC, añada el #parámetro OIDCMode al final de su URL de entorno válida: https://.../MicroStrategyLibrary/#OIDCMode.</value>
  </data>
  <data name="AuthMode" xml:space="preserve">
    <value>Modo de autenticación</value>
  </data>
  <data name="AuthModeDesc" xml:space="preserve">
    <value>El modo de autenticación utilizado para conectarse al Intelligence Server: Estándar o LDAP</value>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>Importar datos de un conjunto de datos de MicroStrategy</value>
  </data>
  <data name="DataSourceName" xml:space="preserve">
    <value>MicroStrategy para Power BI</value>
  </data>
  <data name="DefaultMark" xml:space="preserve">
    <value>(por defecto)</value>
  </data>
  <data name="ErrorContents" xml:space="preserve">
    <value>No se ha podido obtener contenidos de</value>
  </data>
  <data name="Locale" xml:space="preserve">
    <value>es</value>
  </data>
  <data name="LDAPAuth" xml:space="preserve">
    <value>LDAP</value>
  </data>
  <data name="LimitDesc" xml:space="preserve">
    <value>Filas de datos recuperadas por solicitud</value>
  </data>
  <data name="LimitDescLong" xml:space="preserve">
    <value>Número máximo de filas devueltas en una única solicitud. Se utiliza para controlar el comportamiento de paginación.</value>
  </data>
  <data name="PersonalObjects" xml:space="preserve">
    <value>Mis objetos personales</value>
  </data>
  <data name="StandardAuth" xml:space="preserve">
    <value>Estándar</value>
  </data>
  <data name="StatusCode" xml:space="preserve">
    <value>Código de estado:</value>
  </data>
  <data name="TimeoutDesc" xml:space="preserve">
    <value>Duración del tiempo de expiración en segundos</value>
  </data>
  <data name="TimeoutDescLong" xml:space="preserve">
    <value>La configuración del tiempo de expiración para la solicitud HTTP al servidor API de REST.</value>
  </data>
  <data name="DefaultIs" xml:space="preserve">
    <value>La configuración por defecto es</value>
  </data>
  <data name="AdvancedOptions" xml:space="preserve">
    <value>Opciones avanzadas</value>
  </data>
  <data name="ErrorPrivilege" xml:space="preserve">
    <value>No tiene los permisos de UsePowerBI para este proyecto.</value>
  </data>
  <data name="PromptsCloseAll" xml:space="preserve">
    <value>Cerrar todas las selecciones dinámicas</value>
  </data>
  <data name="ErrorPromptedOldEnv" xml:space="preserve">
    <value>Los informes con selección dinámica solo son compatibles en la versión MicroStrategy 11.1.3 y posteriores.</value>
  </data>
  <data name="AuthBasicName" xml:space="preserve">
    <value>Estándar/LDAP</value>
  </data>
  <data name="ErrorWrongTimeoutInput" xml:space="preserve">
    <value>El tiempo de espera no puede ser inferior a 0</value>
  </data>
  <data name="ErrorPrompted" xml:space="preserve">
    <value>No se admiten los informes con selecciones dinámicas.</value>
  </data>
  <data name="AuthOAuthName" xml:space="preserve">
    <value>Library/OIDC</value>
  </data>
  <data name="ApiUrlSample" xml:space="preserve">
    <value>https://mycompany.microstrategy.com/MicroStrategyLibrary/</value>
  </data>
</root>
