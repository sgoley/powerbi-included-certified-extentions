<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiUrl" xml:space="preserve">
    <value>MicroStrategy REST API URL</value>
  </data>
  <data name="ApiUrlDesc" xml:space="preserve">
    <value>유효한 환경 URL(기본적으로 Library 인증이 사용됨)을 입력하십시오. https://.../MicroStrategyLibrary. OIDC 인증의 경우 유효한 환경 URL 끝에 #OIDCMode 매개 변수를 추가합니다. https://.../MicroStrategyLibrary/#OIDCMode.</value>
  </data>
  <data name="AuthMode" xml:space="preserve">
    <value>인증 모드</value>
  </data>
  <data name="AuthModeDesc" xml:space="preserve">
    <value>Intelligence Server에 연결할 때 사용되는 인증 모드: 표준 또는 LDAP</value>
  </data>
  <data name="ButtonHelp" xml:space="preserve">
    <value>MicroStrategy 데이터 세트에서 데이터 가져오기</value>
  </data>
  <data name="DataSourceName" xml:space="preserve">
    <value>Power BI용 MicroStrategy</value>
  </data>
  <data name="DefaultMark" xml:space="preserve">
    <value>(기본값)</value>
  </data>
  <data name="ErrorContents" xml:space="preserve">
    <value>다음 경로에서 콘텐츠를 가져오지 못함.</value>
  </data>
  <data name="Locale" xml:space="preserve">
    <value>ko</value>
  </data>
  <data name="LDAPAuth" xml:space="preserve">
    <value>LDAP</value>
  </data>
  <data name="LimitDesc" xml:space="preserve">
    <value>요청당 검색되는 데이터 행 수</value>
  </data>
  <data name="LimitDescLong" xml:space="preserve">
    <value>단일 요청에서 반환되는 최대 행 수 페이징 동작을 제어하는 데 사용됩니다.</value>
  </data>
  <data name="PersonalObjects" xml:space="preserve">
    <value>내 개인 개체</value>
  </data>
  <data name="StandardAuth" xml:space="preserve">
    <value>표준</value>
  </data>
  <data name="StatusCode" xml:space="preserve">
    <value>상태 코드:</value>
  </data>
  <data name="TimeoutDesc" xml:space="preserve">
    <value>제한 시간(초)</value>
  </data>
  <data name="TimeoutDescLong" xml:space="preserve">
    <value>REST API 서버에 대한 HTTP 요청의 제한 시간 설정입니다.</value>
  </data>
  <data name="DefaultIs" xml:space="preserve">
    <value>기본값은입니다.</value>
  </data>
  <data name="AdvancedOptions" xml:space="preserve">
    <value>고급 옵션</value>
  </data>
  <data name="ErrorPrivilege" xml:space="preserve">
    <value>이 프로젝트에 대한 UsePowerBI 권한이 없습니다.</value>
  </data>
  <data name="PromptsCloseAll" xml:space="preserve">
    <value>모든 프롬프트 닫기</value>
  </data>
  <data name="ErrorPromptedOldEnv" xml:space="preserve">
    <value>프롬프트된 리포트는 MicroStrategy 11.1.3 이상에서만 지원됩니다.</value>
  </data>
  <data name="AuthBasicName" xml:space="preserve">
    <value>표준/LDAP</value>
  </data>
  <data name="ErrorWrongTimeoutInput" xml:space="preserve">
    <value>시간 제한은 0보다 작을 수 없습니다.</value>
  </data>
  <data name="ErrorPrompted" xml:space="preserve">
    <value>프롬프트된 리포트는 지원되지 않습니다.</value>
  </data>
  <data name="AuthOAuthName" xml:space="preserve">
    <value>Library/OIDC</value>
  </data>
  <data name="ApiUrlSample" xml:space="preserve">
    <value>https://mycompany.microstrategy.com/MicroStrategyLibrary/</value>
  </data>
</root>
